{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0","program":"/Users/isaacmarovitz/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","crossbeam_epoch","--edition=2018","/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"std\"","-C","metadata=23bc6225474e2c43","-C","extra-filename=-23bc6225474e2c43","--out-dir","/Users/isaacmarovitz/Documents/RustProjects/Mandelbrot/Mandelbrot/target/rls/debug/deps","-L","dependency=/Users/isaacmarovitz/Documents/RustProjects/Mandelbrot/Mandelbrot/target/rls/debug/deps","--extern","cfg_if=/Users/isaacmarovitz/Documents/RustProjects/Mandelbrot/Mandelbrot/target/rls/debug/deps/libcfg_if-4c4c98ac0638a723.rmeta","--extern","const_fn=/Users/isaacmarovitz/Documents/RustProjects/Mandelbrot/Mandelbrot/target/rls/debug/deps/libconst_fn-e609a31b9a3b2d94.dylib","--extern","crossbeam_utils=/Users/isaacmarovitz/Documents/RustProjects/Mandelbrot/Mandelbrot/target/rls/debug/deps/libcrossbeam_utils-2d67837d253c9350.rmeta","--extern","lazy_static=/Users/isaacmarovitz/Documents/RustProjects/Mandelbrot/Mandelbrot/target/rls/debug/deps/liblazy_static-0a76da841b4d8a97.rmeta","--extern","memoffset=/Users/isaacmarovitz/Documents/RustProjects/Mandelbrot/Mandelbrot/target/rls/debug/deps/libmemoffset-8d080ef92ed88f21.rmeta","--extern","scopeguard=/Users/isaacmarovitz/Documents/RustProjects/Mandelbrot/Mandelbrot/target/rls/debug/deps/libscopeguard-cd6cc29d4fdf6d75.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/isaacmarovitz/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/isaacmarovitz/Documents/RustProjects/Mandelbrot/Mandelbrot/target/rls/debug/deps/libcrossbeam_epoch-23bc6225474e2c43.rmeta"},"prelude":{"crate_id":{"name":"crossbeam_epoch","disambiguator":[15506330558173852834,8220843658479852542]},"crate_root":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src","external_crates":[{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14920118443260649468,6799873627142870961]}},{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","num":2,"id":{"name":"core","disambiguator":[1844954537018218648,16570159001010767920]}},{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16437105423049283034,13312228696766436902]}},{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13569262031960136914,926278369663005569]}},{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9065077540001280346,5972367981040449865]}},{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7013975980446320719,4024400865057542973]}},{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17617311883804814182,13753176117248034829]}},{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[10627003420787933698,8372112224406474813]}},{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[17821317327494065584,13808099233817094080]}},{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[15423047965231407403,416074916754657818]}},{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[13820017895795527141,8230108407990713412]}},{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[1402496660407379612,10608574961827181449]}},{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[17535701131653633025,17299066394660958529]}},{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[4797083768912782472,17265154906292509739]}},{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","num":15,"id":{"name":"cfg_if","disambiguator":[11553434891824061954,15781148962341213441]}},{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","num":16,"id":{"name":"const_fn","disambiguator":[9913045557097791467,7097372773663596455]}},{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","num":17,"id":{"name":"crossbeam_utils","disambiguator":[4943198389574925793,6973678215896914832]}},{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/default.rs","num":18,"id":{"name":"lazy_static","disambiguator":[14839071252340993957,4173087639422160489]}},{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","num":19,"id":{"name":"scopeguard","disambiguator":[18252883105167658003,9859472806098097927]}},{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/internal.rs","num":20,"id":{"name":"memoffset","disambiguator":[13292023598135660135,16018329535932377833]}}],"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":0,"byte_end":3845,"line_start":1,"line_end":91,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":57},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":3500,"byte_end":3509,"line_start":80,"line_end":80,"column_start":32,"column_end":41},"alias_span":null,"name":"Pointable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":91},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":3511,"byte_end":3517,"line_start":80,"line_end":80,"column_start":43,"column_end":49},"alias_span":null,"name":"Atomic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":29},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":3519,"byte_end":3537,"line_start":80,"line_end":80,"column_start":51,"column_end":69},"alias_span":null,"name":"CompareAndSetError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":40},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":3539,"byte_end":3560,"line_start":80,"line_end":80,"column_start":71,"column_end":92},"alias_span":null,"name":"CompareAndSetOrdering","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":166},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":3562,"byte_end":3567,"line_start":80,"line_end":80,"column_start":94,"column_end":99},"alias_span":null,"name":"Owned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":162},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":3569,"byte_end":3576,"line_start":80,"line_end":80,"column_start":101,"column_end":108},"alias_span":null,"name":"Pointer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":220},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":3578,"byte_end":3584,"line_start":80,"line_end":80,"column_start":110,"column_end":116},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":281},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":3621,"byte_end":3630,"line_start":81,"line_end":81,"column_start":35,"column_end":44},"alias_span":null,"name":"Collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":297},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":3632,"byte_end":3643,"line_start":81,"line_end":81,"column_start":46,"column_end":57},"alias_span":null,"name":"LocalHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":380},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":3676,"byte_end":3687,"line_start":82,"line_end":82,"column_start":31,"column_end":42},"alias_span":null,"name":"unprotected","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":356},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":3689,"byte_end":3694,"line_start":82,"line_end":82,"column_start":44,"column_end":49},"alias_span":null,"name":"Guard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":642},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":3802,"byte_end":3819,"line_start":89,"line_end":89,"column_start":33,"column_end":50},"alias_span":null,"name":"default_collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":640},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":3821,"byte_end":3830,"line_start":89,"line_end":89,"column_start":52,"column_end":61},"alias_span":null,"name":"is_pinned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":638},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":3832,"byte_end":3835,"line_start":89,"line_end":89,"column_start":63,"column_end":66},"alias_span":null,"name":"pin","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":0,"byte_end":3845,"line_start":1,"line_end":91,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":274},{"krate":0,"index":307},{"krate":0,"index":332},{"krate":0,"index":348},{"krate":0,"index":382},{"krate":0,"index":473},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":632},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651}],"decl_id":null,"docs":" Epoch-based memory reclamation.","sig":null,"attributes":[{"value":"! Epoch-based memory reclamation.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":0,"byte_end":35,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":36,"byte_end":39,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! An interesting problem concurrent collections deal with comes from the remove operation.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":40,"byte_end":132,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"! Suppose that a thread removes an element from a lock-free map, while another thread is reading","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":133,"byte_end":231,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"! that same element at the same time. The first thread must wait until the second thread stops","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":232,"byte_end":328,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"! reading the element. Only then it is safe to destruct it.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":329,"byte_end":390,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":391,"byte_end":394,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! Programming languages that come with garbage collectors solve this problem trivially. The","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":395,"byte_end":488,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"! garbage collector will destruct the removed element when no thread can hold a reference to it","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":489,"byte_end":586,"line_start":9,"line_end":9,"column_start":1,"column_end":98}},{"value":"! anymore.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":587,"byte_end":599,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":600,"byte_end":603,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! This crate implements a basic memory reclamation mechanism, which is based on epochs. When an","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":604,"byte_end":701,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"! element gets removed from a concurrent collection, it is inserted into a pile of garbage and","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":702,"byte_end":798,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"! marked with the current epoch. Every time a thread accesses a collection, it checks the current","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":799,"byte_end":898,"line_start":14,"line_end":14,"column_start":1,"column_end":100}},{"value":"! epoch, attempts to increment it, and destructs some garbage that became so old that no thread","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":899,"byte_end":996,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"! can be referencing it anymore.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":997,"byte_end":1031,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":1032,"byte_end":1035,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! That is the general mechanism behind epoch-based memory reclamation, but the details are a bit","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":1036,"byte_end":1134,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"! more complicated. Anyhow, memory reclamation is designed to be fully automatic and something","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":1135,"byte_end":1231,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"! users of concurrent collections don't have to worry much about.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":1232,"byte_end":1299,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":1300,"byte_end":1303,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! # Pointers","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":1304,"byte_end":1318,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":1319,"byte_end":1322,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"! Concurrent collections are built using atomic pointers. This module provides [`Atomic`], which","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":1323,"byte_end":1421,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"! is just a shared atomic pointer to a heap-allocated object. Loading an [`Atomic`] yields a","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":1422,"byte_end":1516,"line_start":25,"line_end":25,"column_start":1,"column_end":95}},{"value":"! [`Shared`], which is an epoch-protected pointer through which the loaded object can be safely","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":1517,"byte_end":1614,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"! read.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":1615,"byte_end":1624,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":1625,"byte_end":1628,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! # Pinning","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":1629,"byte_end":1642,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":1643,"byte_end":1646,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! Before an [`Atomic`] can be loaded, a participant must be [`pin`]ned. By pinning a participant","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":1647,"byte_end":1745,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"! we declare that any object that gets removed from now on must not be destructed just","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":1746,"byte_end":1834,"line_start":32,"line_end":32,"column_start":1,"column_end":89}},{"value":"! yet. Garbage collection of newly removed objects is suspended until the participant gets","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":1835,"byte_end":1927,"line_start":33,"line_end":33,"column_start":1,"column_end":93}},{"value":"! unpinned.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":1928,"byte_end":1941,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":1942,"byte_end":1945,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! # Garbage","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":1946,"byte_end":1959,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":1960,"byte_end":1963,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! Objects that get removed from concurrent collections must be stashed away until all currently","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":1964,"byte_end":2061,"line_start":38,"line_end":38,"column_start":1,"column_end":98}},{"value":"! pinned participants get unpinned. Such objects can be stored into a thread-local or global","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":2062,"byte_end":2156,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"! storage, where they are kept until the right time for their destruction comes.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":2157,"byte_end":2239,"line_start":40,"line_end":40,"column_start":1,"column_end":83}},{"value":"!","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":2240,"byte_end":2243,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! There is a global shared instance of garbage queue. You can [`defer`](Guard::defer) the execution of an","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":2244,"byte_end":2351,"line_start":42,"line_end":42,"column_start":1,"column_end":108}},{"value":"! arbitrary function until the global epoch is advanced enough. Most notably, concurrent data","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":2352,"byte_end":2447,"line_start":43,"line_end":43,"column_start":1,"column_end":96}},{"value":"! structures may defer the deallocation of an object.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":2448,"byte_end":2503,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":2504,"byte_end":2507,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"! # APIs","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":2508,"byte_end":2518,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":2519,"byte_end":2522,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! For majority of use cases, just use the default garbage collector by invoking [`pin`]. If you","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":2523,"byte_end":2620,"line_start":48,"line_end":48,"column_start":1,"column_end":98}},{"value":"! want to create your own garbage collector, use the [`Collector`] API.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":2621,"byte_end":2694,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms)","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":2855,"byte_end":2926,"line_start":58,"line_end":58,"column_start":1,"column_end":72}},{"value":"allow(clippy :: match_like_matches_macro)","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/lib.rs","byte_start":3120,"byte_end":3163,"line_start":63,"line_end":63,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":29},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6493337,"byte_end":6493355,"line_start":29,"line_end":29,"column_start":12,"column_end":30},"name":"CompareAndSetError","qualname":"::atomic::CompareAndSetError","value":"CompareAndSetError { current, new }","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34}],"decl_id":null,"docs":" The error returned on failed compare-and-set operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-set operation.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6493266,"byte_end":6493325,"line_start":28,"line_end":28,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":33},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6493485,"byte_end":6493492,"line_start":31,"line_end":31,"column_start":9,"column_end":16},"name":"current","qualname":"::atomic::CompareAndSetError::current","value":"atomic::Shared<'g, T>","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" The value in the atomic pointer at the time of the failed operation.\n","sig":null,"attributes":[{"value":"/ The value in the atomic pointer at the time of the failed operation.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6493404,"byte_end":6493476,"line_start":30,"line_end":30,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":34},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6493578,"byte_end":6493581,"line_start":34,"line_end":34,"column_start":9,"column_end":12},"name":"new","qualname":"::atomic::CompareAndSetError::new","value":"P","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" The new value, which the operation failed to store.\n","sig":null,"attributes":[{"value":"/ The new value, which the operation failed to store.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6493514,"byte_end":6493569,"line_start":33,"line_end":33,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":40},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6494470,"byte_end":6494491,"line_start":57,"line_end":57,"column_start":11,"column_end":32},"name":"CompareAndSetOrdering","qualname":"::atomic::CompareAndSetOrdering","value":"CompareAndSetOrdering","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42}],"decl_id":null,"docs":" Memory orderings for compare-and-set operations.","sig":null,"attributes":[{"value":"/ Memory orderings for compare-and-set operations.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6493900,"byte_end":6493952,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6493953,"byte_end":6493956,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ A compare-and-set operation can have different memory orderings depending on whether it","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6493957,"byte_end":6494048,"line_start":48,"line_end":48,"column_start":1,"column_end":92}},{"value":"/ succeeds or fails. This trait generalizes different ways of specifying memory orderings.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6494049,"byte_end":6494141,"line_start":49,"line_end":49,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6494142,"byte_end":6494145,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The two ways of specifying orderings for compare-and-set are:","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6494146,"byte_end":6494211,"line_start":51,"line_end":51,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6494212,"byte_end":6494215,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ 1. Just one `Ordering` for the success case. In case of failure, the strongest appropriate","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6494216,"byte_end":6494310,"line_start":53,"line_end":53,"column_start":1,"column_end":95}},{"value":"/    ordering is chosen.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6494311,"byte_end":6494337,"line_start":54,"line_end":54,"column_start":1,"column_end":27}},{"value":"/ 2. A pair of `Ordering`s. The first one is for the success case, while the second one is","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6494338,"byte_end":6494430,"line_start":55,"line_end":55,"column_start":1,"column_end":93}},{"value":"/    for the failure case.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6494431,"byte_end":6494459,"line_start":56,"line_end":56,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6494557,"byte_end":6494564,"line_start":59,"line_end":59,"column_start":8,"column_end":15},"name":"success","qualname":"::atomic::CompareAndSetOrdering::success","value":"pub fn success(&Self) -> Ordering","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" The ordering of the operation when it succeeds.\n","sig":null,"attributes":[{"value":"/ The ordering of the operation when it succeeds.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6494498,"byte_end":6494549,"line_start":58,"line_end":58,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6494782,"byte_end":6494789,"line_start":65,"line_end":65,"column_start":8,"column_end":15},"name":"failure","qualname":"::atomic::CompareAndSetOrdering::failure","value":"pub fn failure(&Self) -> Ordering","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" The ordering of the operation when it fails.","sig":null,"attributes":[{"value":"/ The ordering of the operation when it fails.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6494590,"byte_end":6494638,"line_start":61,"line_end":61,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6494643,"byte_end":6494646,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ The failure ordering can't be `Release` or `AcqRel` and must be equivalent or weaker than","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6494651,"byte_end":6494744,"line_start":63,"line_end":63,"column_start":5,"column_end":98}},{"value":"/ the success ordering.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6494749,"byte_end":6494774,"line_start":64,"line_end":64,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":57},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6497097,"byte_end":6497106,"line_start":138,"line_end":138,"column_start":11,"column_end":20},"name":"Pointable","qualname":"::atomic::Pointable","value":"Pointable","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":63},{"krate":0,"index":65}],"decl_id":null,"docs":" Types that are pointed to by a single word.","sig":null,"attributes":[{"value":"/ Types that are pointed to by a single word.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6496124,"byte_end":6496171,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6496172,"byte_end":6496175,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ In concurrent programming, it is necessary to represent an object within a word because atomic","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6496176,"byte_end":6496274,"line_start":120,"line_end":120,"column_start":1,"column_end":99}},{"value":"/ operations (e.g., reads, writes, read-modify-writes) support only single words.  This trait","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6496275,"byte_end":6496370,"line_start":121,"line_end":121,"column_start":1,"column_end":96}},{"value":"/ qualifies such types that are pointed to by a single word.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6496371,"byte_end":6496433,"line_start":122,"line_end":122,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6496434,"byte_end":6496437,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The trait generalizes `Box<T>` for a sized type `T`.  In a box, an object of type `T` is","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6496438,"byte_end":6496530,"line_start":124,"line_end":124,"column_start":1,"column_end":93}},{"value":"/ allocated in heap and it is owned by a single-word pointer.  This trait is also implemented for","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6496531,"byte_end":6496630,"line_start":125,"line_end":125,"column_start":1,"column_end":100}},{"value":"/ `[MaybeUninit<T>]` by storing its size along with its elements and pointing to the pair of array","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6496631,"byte_end":6496731,"line_start":126,"line_end":126,"column_start":1,"column_end":101}},{"value":"/ size and elements.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6496732,"byte_end":6496754,"line_start":127,"line_end":127,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6496755,"byte_end":6496758,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ Pointers to `Pointable` types can be stored in [`Atomic`], [`Owned`], and [`Shared`].  In","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6496759,"byte_end":6496852,"line_start":129,"line_end":129,"column_start":1,"column_end":94}},{"value":"/ particular, Crossbeam supports dynamically sized slices as follows.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6496853,"byte_end":6496924,"line_start":130,"line_end":130,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6496925,"byte_end":6496928,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6496929,"byte_end":6496936,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/ use std::mem::MaybeUninit;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6496937,"byte_end":6496967,"line_start":133,"line_end":133,"column_start":1,"column_end":31}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6496968,"byte_end":6496999,"line_start":134,"line_end":134,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6497000,"byte_end":6497003,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ let o = Owned::<[MaybeUninit<i32>]>::init(10); // allocating [i32; 10]","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6497004,"byte_end":6497078,"line_start":136,"line_end":136,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6497079,"byte_end":6497086,"line_start":137,"line_end":137,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":58},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6497153,"byte_end":6497158,"line_start":140,"line_end":140,"column_start":11,"column_end":16},"name":"ALIGN","qualname":"::atomic::Pointable::ALIGN","value":"usize","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" The alignment of pointer.\n","sig":null,"attributes":[{"value":"/ The alignment of pointer.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6497113,"byte_end":6497142,"line_start":139,"line_end":139,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":59},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6497212,"byte_end":6497216,"line_start":143,"line_end":143,"column_start":10,"column_end":14},"name":"Init","qualname":"::atomic::Pointable::Init","value":"type Init;","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" The type for initializers.\n","sig":null,"attributes":[{"value":"/ The type for initializers.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6497172,"byte_end":6497202,"line_start":142,"line_end":142,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6497368,"byte_end":6497372,"line_start":150,"line_end":150,"column_start":15,"column_end":19},"name":"init","qualname":"::atomic::Pointable::init","value":"pub unsafe fn init(Self::Init) -> usize","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Initializes a with the given initializer.","sig":null,"attributes":[{"value":"/ Initializes a with the given initializer.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6497223,"byte_end":6497268,"line_start":145,"line_end":145,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6497273,"byte_end":6497276,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6497281,"byte_end":6497293,"line_start":147,"line_end":147,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6497298,"byte_end":6497301,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ The result should be a multiple of `ALIGN`.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6497306,"byte_end":6497353,"line_start":149,"line_end":149,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6497736,"byte_end":6497741,"line_start":159,"line_end":159,"column_start":15,"column_end":20},"name":"deref","qualname":"::atomic::Pointable::deref","value":"pub unsafe fn deref<'a>(usize) -> &'a Self","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Dereferences the given pointer.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6497406,"byte_end":6497441,"line_start":152,"line_end":152,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6497446,"byte_end":6497449,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6497454,"byte_end":6497466,"line_start":154,"line_end":154,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6497471,"byte_end":6497474,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6497479,"byte_end":6497555,"line_start":156,"line_end":156,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6497560,"byte_end":6497628,"line_start":157,"line_end":157,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be mutably dereferenced by [`Pointable::deref_mut`] concurrently.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6497633,"byte_end":6497721,"line_start":158,"line_end":158,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6498140,"byte_end":6498149,"line_start":169,"line_end":169,"column_start":15,"column_end":24},"name":"deref_mut","qualname":"::atomic::Pointable::deref_mut","value":"pub unsafe fn deref_mut<'a>(usize) -> &'a mut Self","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Mutably dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Mutably dereferences the given pointer.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6497776,"byte_end":6497819,"line_start":161,"line_end":161,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6497824,"byte_end":6497827,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6497832,"byte_end":6497844,"line_start":163,"line_end":163,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6497849,"byte_end":6497852,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6497857,"byte_end":6497933,"line_start":165,"line_end":165,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6497938,"byte_end":6498006,"line_start":166,"line_end":166,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6498011,"byte_end":6498101,"line_start":167,"line_end":167,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6498106,"byte_end":6498125,"line_start":168,"line_end":168,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6498562,"byte_end":6498566,"line_start":179,"line_end":179,"column_start":15,"column_end":19},"name":"drop","qualname":"::atomic::Pointable::drop","value":"pub unsafe fn drop(usize)","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Drops the object pointed to by the given pointer.","sig":null,"attributes":[{"value":"/ Drops the object pointed to by the given pointer.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6498188,"byte_end":6498241,"line_start":171,"line_end":171,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6498246,"byte_end":6498249,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6498254,"byte_end":6498266,"line_start":173,"line_end":173,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6498271,"byte_end":6498274,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6498279,"byte_end":6498355,"line_start":175,"line_end":175,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6498360,"byte_end":6498428,"line_start":176,"line_end":176,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6498433,"byte_end":6498523,"line_start":177,"line_end":177,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6498528,"byte_end":6498547,"line_start":178,"line_end":178,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":91},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6501541,"byte_end":6501547,"line_start":275,"line_end":275,"column_start":12,"column_end":18},"name":"Atomic","qualname":"::atomic::Atomic","value":"Atomic {  }","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94}],"decl_id":null,"docs":" An atomic pointer that can be safely shared between threads.","sig":null,"attributes":[{"value":"/ An atomic pointer that can be safely shared between threads.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6501023,"byte_end":6501087,"line_start":266,"line_end":266,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6501088,"byte_end":6501091,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6501092,"byte_end":6501190,"line_start":268,"line_end":268,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address. For example, the tag for a pointer to a sized type `T`","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6501191,"byte_end":6501288,"line_start":269,"line_end":269,"column_start":1,"column_end":98}},{"value":"/ should be less than `(1 << mem::align_of::<T>().trailing_zeros())`.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6501289,"byte_end":6501360,"line_start":270,"line_end":270,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6501361,"byte_end":6501364,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ Any method that loads the pointer must be passed a reference to a [`Guard`].","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6501365,"byte_end":6501445,"line_start":272,"line_end":272,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6501446,"byte_end":6501449,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ Crossbeam supports dynamically sized types.  See [`Pointable`] for details.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6501450,"byte_end":6501529,"line_start":274,"line_end":274,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6502033,"byte_end":6502036,"line_start":293,"line_end":293,"column_start":12,"column_end":15},"name":"new","qualname":"<Atomic<T>>::new","value":"pub fn new(T) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6501800,"byte_end":6501882,"line_start":284,"line_end":284,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6501887,"byte_end":6501890,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6501895,"byte_end":6501909,"line_start":286,"line_end":286,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6501914,"byte_end":6501917,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6501922,"byte_end":6501929,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6501934,"byte_end":6501966,"line_start":289,"line_end":289,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6501971,"byte_end":6501974,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6501979,"byte_end":6502009,"line_start":291,"line_end":291,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6502014,"byte_end":6502021,"line_start":292,"line_end":292,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6502380,"byte_end":6502384,"line_start":308,"line_end":308,"column_start":12,"column_end":16},"name":"init","qualname":"<Atomic<T>>::init","value":"pub fn init(T::Init) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6502139,"byte_end":6502221,"line_start":299,"line_end":299,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6502226,"byte_end":6502229,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6502234,"byte_end":6502248,"line_start":301,"line_end":301,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6502253,"byte_end":6502256,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6502261,"byte_end":6502268,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6502273,"byte_end":6502305,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6502310,"byte_end":6502313,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::init(1234);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6502318,"byte_end":6502356,"line_start":306,"line_end":306,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6502361,"byte_end":6502368,"line_start":307,"line_end":307,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6502933,"byte_end":6502937,"line_start":331,"line_end":331,"column_start":18,"column_end":22},"name":"null","qualname":"<Atomic<T>>::null","value":"pub fn null() -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null atomic pointer.","sig":null,"attributes":[{"value":"cfg(not(feature = \"nightly\"))","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6502883,"byte_end":6502915,"line_start":330,"line_end":330,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6503522,"byte_end":6503526,"line_start":353,"line_end":353,"column_start":12,"column_end":16},"name":"load","qualname":"<Atomic<T>>::load","value":"pub fn load<'g>(&Self, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6503064,"byte_end":6503109,"line_start":338,"line_end":338,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6503114,"byte_end":6503117,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6503122,"byte_end":6503212,"line_start":340,"line_end":340,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6503217,"byte_end":6503231,"line_start":341,"line_end":341,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6503236,"byte_end":6503239,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6503244,"byte_end":6503258,"line_start":343,"line_end":343,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6503263,"byte_end":6503266,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6503271,"byte_end":6503278,"line_start":345,"line_end":345,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6503283,"byte_end":6503332,"line_start":346,"line_end":346,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6503337,"byte_end":6503381,"line_start":347,"line_end":347,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6503386,"byte_end":6503389,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6503394,"byte_end":6503424,"line_start":349,"line_end":349,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6503429,"byte_end":6503459,"line_start":350,"line_end":350,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6503464,"byte_end":6503498,"line_start":351,"line_end":351,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6503503,"byte_end":6503510,"line_start":352,"line_end":352,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6504533,"byte_end":6504545,"line_start":378,"line_end":378,"column_start":12,"column_end":24},"name":"load_consume","qualname":"<Atomic<T>>::load_consume","value":"pub fn load_consume<'g>(&Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6503656,"byte_end":6503735,"line_start":357,"line_end":357,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6503740,"byte_end":6503743,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ This is similar to the \"acquire\" ordering, except that an ordering is","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6503748,"byte_end":6503821,"line_start":359,"line_end":359,"column_start":5,"column_end":78}},{"value":"/ only guaranteed with operations that \"depend on\" the result of the load.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6503826,"byte_end":6503902,"line_start":360,"line_end":360,"column_start":5,"column_end":81}},{"value":"/ However consume loads are usually much faster than acquire loads on","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6503907,"byte_end":6503978,"line_start":361,"line_end":361,"column_start":5,"column_end":76}},{"value":"/ architectures with a weak memory model since they don't require memory","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6503983,"byte_end":6504057,"line_start":362,"line_end":362,"column_start":5,"column_end":79}},{"value":"/ fence instructions.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6504062,"byte_end":6504085,"line_start":363,"line_end":363,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6504090,"byte_end":6504093,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ The exact definition of \"depend on\" is a bit vague, but it works as you","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6504098,"byte_end":6504173,"line_start":365,"line_end":365,"column_start":5,"column_end":80}},{"value":"/ would expect in practice since a lot of software, especially the Linux","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6504178,"byte_end":6504252,"line_start":366,"line_end":366,"column_start":5,"column_end":79}},{"value":"/ kernel, rely on this behavior.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6504257,"byte_end":6504291,"line_start":367,"line_end":367,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6504296,"byte_end":6504299,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6504304,"byte_end":6504318,"line_start":369,"line_end":369,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6504323,"byte_end":6504326,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6504331,"byte_end":6504338,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6504343,"byte_end":6504392,"line_start":372,"line_end":372,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6504397,"byte_end":6504400,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6504405,"byte_end":6504435,"line_start":374,"line_end":374,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6504440,"byte_end":6504470,"line_start":375,"line_end":375,"column_start":5,"column_end":35}},{"value":"/ let p = a.load_consume(guard);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6504475,"byte_end":6504509,"line_start":376,"line_end":376,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6504514,"byte_end":6504521,"line_start":377,"line_end":377,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6505153,"byte_end":6505158,"line_start":397,"line_end":397,"column_start":12,"column_end":17},"name":"store","qualname":"<Atomic<T>>::store","value":"pub fn store<P: Pointer<T>>(&Self, P, Ordering)","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6504665,"byte_end":6504730,"line_start":382,"line_end":382,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6504735,"byte_end":6504738,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6504743,"byte_end":6504833,"line_start":384,"line_end":384,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6504838,"byte_end":6504852,"line_start":385,"line_end":385,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6504857,"byte_end":6504860,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6504865,"byte_end":6504879,"line_start":387,"line_end":387,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6504884,"byte_end":6504887,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6504892,"byte_end":6504899,"line_start":389,"line_end":389,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{Atomic, Owned, Shared};","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6504904,"byte_end":6504953,"line_start":390,"line_end":390,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6504958,"byte_end":6505002,"line_start":391,"line_end":391,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6505007,"byte_end":6505010,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6505015,"byte_end":6505045,"line_start":393,"line_end":393,"column_start":5,"column_end":35}},{"value":"/ a.store(Shared::null(), SeqCst);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6505050,"byte_end":6505086,"line_start":394,"line_end":394,"column_start":5,"column_end":41}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6505091,"byte_end":6505129,"line_start":395,"line_end":395,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6505134,"byte_end":6505141,"line_start":396,"line_end":396,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6505808,"byte_end":6505812,"line_start":417,"line_end":417,"column_start":12,"column_end":16},"name":"swap","qualname":"<Atomic<T>>::swap","value":"pub fn swap<'g, P: Pointer<T>>(&Self, P, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous\n `Shared`.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6505265,"byte_end":6505353,"line_start":401,"line_end":401,"column_start":5,"column_end":93}},{"value":"/ `Shared`.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6505358,"byte_end":6505371,"line_start":402,"line_end":402,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6505376,"byte_end":6505379,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6505384,"byte_end":6505474,"line_start":404,"line_end":404,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6505479,"byte_end":6505493,"line_start":405,"line_end":405,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6505498,"byte_end":6505501,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6505506,"byte_end":6505520,"line_start":407,"line_end":407,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6505525,"byte_end":6505528,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6505533,"byte_end":6505540,"line_start":409,"line_end":409,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6505545,"byte_end":6505602,"line_start":410,"line_end":410,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6505607,"byte_end":6505651,"line_start":411,"line_end":411,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6505656,"byte_end":6505659,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6505664,"byte_end":6505694,"line_start":413,"line_end":413,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6505699,"byte_end":6505729,"line_start":414,"line_end":414,"column_start":5,"column_end":35}},{"value":"/ let p = a.swap(Shared::null(), SeqCst, guard);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6505734,"byte_end":6505784,"line_start":415,"line_end":415,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6505789,"byte_end":6505796,"line_start":416,"line_end":416,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6507079,"byte_end":6507094,"line_start":445,"line_end":445,"column_start":12,"column_end":27},"name":"compare_and_set","qualname":"<Atomic<T>>::compare_and_set","value":"pub fn compare_and_set<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6505983,"byte_end":6506079,"line_start":421,"line_end":421,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6506084,"byte_end":6506178,"line_start":422,"line_end":422,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6506183,"byte_end":6506254,"line_start":423,"line_end":423,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6506259,"byte_end":6506262,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6506267,"byte_end":6506362,"line_start":425,"line_end":425,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6506367,"byte_end":6506458,"line_start":426,"line_end":426,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6506463,"byte_end":6506476,"line_start":427,"line_end":427,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6506481,"byte_end":6506484,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6506489,"byte_end":6506574,"line_start":429,"line_end":429,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6506579,"byte_end":6506610,"line_start":430,"line_end":430,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6506615,"byte_end":6506618,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6506623,"byte_end":6506637,"line_start":432,"line_end":432,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6506642,"byte_end":6506645,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6506650,"byte_end":6506657,"line_start":434,"line_end":434,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6506662,"byte_end":6506726,"line_start":435,"line_end":435,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6506731,"byte_end":6506775,"line_start":436,"line_end":436,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6506780,"byte_end":6506783,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6506788,"byte_end":6506818,"line_start":438,"line_end":438,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6506823,"byte_end":6506826,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6506831,"byte_end":6506861,"line_start":440,"line_end":440,"column_start":5,"column_end":35}},{"value":"/ let curr = a.load(SeqCst, guard);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6506866,"byte_end":6506903,"line_start":441,"line_end":441,"column_start":5,"column_end":42}},{"value":"/ let res1 = a.compare_and_set(curr, Shared::null(), SeqCst, guard);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6506908,"byte_end":6506978,"line_start":442,"line_end":442,"column_start":5,"column_end":75}},{"value":"/ let res2 = a.compare_and_set(curr, Owned::new(5678), SeqCst, guard);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6506983,"byte_end":6507055,"line_start":443,"line_end":443,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6507060,"byte_end":6507067,"line_start":444,"line_end":444,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6509563,"byte_end":6509583,"line_start":514,"line_end":514,"column_start":12,"column_end":32},"name":"compare_and_set_weak","qualname":"<Atomic<T>>::compare_and_set_weak","value":"pub fn compare_and_set_weak<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6507763,"byte_end":6507859,"line_start":468,"line_end":468,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6507864,"byte_end":6507958,"line_start":469,"line_end":469,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6507963,"byte_end":6508034,"line_start":470,"line_end":470,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6508039,"byte_end":6508042,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_and_set`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6508047,"byte_end":6508141,"line_start":472,"line_end":472,"column_start":5,"column_end":99}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6508146,"byte_end":6508241,"line_start":473,"line_end":473,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6508246,"byte_end":6508336,"line_start":474,"line_end":474,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6508341,"byte_end":6508425,"line_start":475,"line_end":475,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6508430,"byte_end":6508433,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6508438,"byte_end":6508523,"line_start":477,"line_end":477,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6508528,"byte_end":6508559,"line_start":478,"line_end":478,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6508564,"byte_end":6508567,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ [`compare_and_set`]: Atomic::compare_and_set","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6508572,"byte_end":6508620,"line_start":480,"line_end":480,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6508625,"byte_end":6508628,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6508633,"byte_end":6508647,"line_start":482,"line_end":482,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6508652,"byte_end":6508655,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6508660,"byte_end":6508667,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6508672,"byte_end":6508736,"line_start":485,"line_end":485,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6508741,"byte_end":6508785,"line_start":486,"line_end":486,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6508790,"byte_end":6508793,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6508798,"byte_end":6508828,"line_start":488,"line_end":488,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6508833,"byte_end":6508863,"line_start":489,"line_end":489,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6508868,"byte_end":6508871,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6508876,"byte_end":6508911,"line_start":491,"line_end":491,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6508916,"byte_end":6508956,"line_start":492,"line_end":492,"column_start":5,"column_end":45}},{"value":"/ loop {","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6508961,"byte_end":6508971,"line_start":493,"line_end":493,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(ptr, new, SeqCst, guard) {","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6508976,"byte_end":6509039,"line_start":494,"line_end":494,"column_start":5,"column_end":68}},{"value":"/         Ok(p) => {","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6509044,"byte_end":6509066,"line_start":495,"line_end":495,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6509071,"byte_end":6509095,"line_start":496,"line_end":496,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6509100,"byte_end":6509122,"line_start":497,"line_end":497,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6509127,"byte_end":6509140,"line_start":498,"line_end":498,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6509145,"byte_end":6509170,"line_start":499,"line_end":499,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6509175,"byte_end":6509209,"line_start":500,"line_end":500,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6509214,"byte_end":6509244,"line_start":501,"line_end":501,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6509249,"byte_end":6509262,"line_start":502,"line_end":502,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6509267,"byte_end":6509276,"line_start":503,"line_end":503,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6509281,"byte_end":6509286,"line_start":504,"line_end":504,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6509291,"byte_end":6509294,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6509299,"byte_end":6509340,"line_start":506,"line_end":506,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6509345,"byte_end":6509355,"line_start":507,"line_end":507,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(curr, Shared::null(), SeqCst, guard) {","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6509360,"byte_end":6509435,"line_start":508,"line_end":508,"column_start":5,"column_end":80}},{"value":"/         Ok(_) => break,","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6509440,"byte_end":6509467,"line_start":509,"line_end":509,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6509472,"byte_end":6509515,"line_start":510,"line_end":510,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6509520,"byte_end":6509529,"line_start":511,"line_end":511,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6509534,"byte_end":6509539,"line_start":512,"line_end":512,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6509544,"byte_end":6509551,"line_start":513,"line_end":513,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6510988,"byte_end":6510997,"line_start":556,"line_end":556,"column_start":12,"column_end":21},"name":"fetch_and","qualname":"<Atomic<T>>::fetch_and","value":"pub fn fetch_and<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"and\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"and\" with the current tag.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6510257,"byte_end":6510296,"line_start":537,"line_end":537,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6510301,"byte_end":6510304,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"and\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6510309,"byte_end":6510403,"line_start":539,"line_end":539,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6510408,"byte_end":6510464,"line_start":540,"line_end":540,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6510469,"byte_end":6510472,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6510477,"byte_end":6510567,"line_start":542,"line_end":542,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6510572,"byte_end":6510586,"line_start":543,"line_end":543,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6510591,"byte_end":6510594,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6510599,"byte_end":6510613,"line_start":545,"line_end":545,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6510618,"byte_end":6510621,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6510626,"byte_end":6510633,"line_start":547,"line_end":547,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6510638,"byte_end":6510695,"line_start":548,"line_end":548,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6510700,"byte_end":6510744,"line_start":549,"line_end":549,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6510749,"byte_end":6510752,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(3));","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6510757,"byte_end":6510817,"line_start":551,"line_end":551,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6510822,"byte_end":6510852,"line_start":552,"line_end":552,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_and(2, SeqCst, guard).tag(), 3);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6510857,"byte_end":6510912,"line_start":553,"line_end":553,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6510917,"byte_end":6510964,"line_start":554,"line_end":554,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6510969,"byte_end":6510976,"line_start":555,"line_end":555,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6511896,"byte_end":6511904,"line_start":579,"line_end":579,"column_start":12,"column_end":20},"name":"fetch_or","qualname":"<Atomic<T>>::fetch_or","value":"pub fn fetch_or<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"or\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"or\" with the current tag.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6511168,"byte_end":6511206,"line_start":560,"line_end":560,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6511211,"byte_end":6511214,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"or\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6511219,"byte_end":6511312,"line_start":562,"line_end":562,"column_start":5,"column_end":98}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6511317,"byte_end":6511373,"line_start":563,"line_end":563,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6511378,"byte_end":6511381,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6511386,"byte_end":6511476,"line_start":565,"line_end":565,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6511481,"byte_end":6511495,"line_start":566,"line_end":566,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6511500,"byte_end":6511503,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6511508,"byte_end":6511522,"line_start":568,"line_end":568,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6511527,"byte_end":6511530,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6511535,"byte_end":6511542,"line_start":570,"line_end":570,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6511547,"byte_end":6511604,"line_start":571,"line_end":571,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6511609,"byte_end":6511653,"line_start":572,"line_end":572,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6511658,"byte_end":6511661,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6511666,"byte_end":6511726,"line_start":574,"line_end":574,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6511731,"byte_end":6511761,"line_start":575,"line_end":575,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_or(2, SeqCst, guard).tag(), 1);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6511766,"byte_end":6511820,"line_start":576,"line_end":576,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 3);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6511825,"byte_end":6511872,"line_start":577,"line_end":577,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6511877,"byte_end":6511884,"line_start":578,"line_end":578,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6512804,"byte_end":6512813,"line_start":602,"line_end":602,"column_start":12,"column_end":21},"name":"fetch_xor","qualname":"<Atomic<T>>::fetch_xor","value":"pub fn fetch_xor<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"xor\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"xor\" with the current tag.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6512073,"byte_end":6512112,"line_start":583,"line_end":583,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6512117,"byte_end":6512120,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"xor\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6512125,"byte_end":6512219,"line_start":585,"line_end":585,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6512224,"byte_end":6512280,"line_start":586,"line_end":586,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6512285,"byte_end":6512288,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6512293,"byte_end":6512383,"line_start":588,"line_end":588,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6512388,"byte_end":6512402,"line_start":589,"line_end":589,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6512407,"byte_end":6512410,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6512415,"byte_end":6512429,"line_start":591,"line_end":591,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6512434,"byte_end":6512437,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6512442,"byte_end":6512449,"line_start":593,"line_end":593,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6512454,"byte_end":6512511,"line_start":594,"line_end":594,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6512516,"byte_end":6512560,"line_start":595,"line_end":595,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6512565,"byte_end":6512568,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6512573,"byte_end":6512633,"line_start":597,"line_end":597,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6512638,"byte_end":6512668,"line_start":598,"line_end":598,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_xor(3, SeqCst, guard).tag(), 1);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6512673,"byte_end":6512728,"line_start":599,"line_end":599,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6512733,"byte_end":6512780,"line_start":600,"line_end":600,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6512785,"byte_end":6512792,"line_start":601,"line_end":601,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6514110,"byte_end":6514120,"line_start":640,"line_end":640,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Atomic<T>>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6512983,"byte_end":6513018,"line_start":606,"line_end":606,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6513023,"byte_end":6513026,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ This consumes the atomic and converts it into [`Owned`]. As [`Atomic`] doesn't have a","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6513031,"byte_end":6513120,"line_start":608,"line_end":608,"column_start":5,"column_end":94}},{"value":"/ destructor and doesn't drop the pointee while [`Owned`] does, this is suitable for","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6513125,"byte_end":6513211,"line_start":609,"line_end":609,"column_start":5,"column_end":91}},{"value":"/ destructors of data structures.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6513216,"byte_end":6513251,"line_start":610,"line_end":610,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6513256,"byte_end":6513259,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6513264,"byte_end":6513276,"line_start":612,"line_end":612,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6513281,"byte_end":6513284,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6513289,"byte_end":6513348,"line_start":614,"line_end":614,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6513353,"byte_end":6513356,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6513361,"byte_end":6513373,"line_start":616,"line_end":616,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6513378,"byte_end":6513381,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6513386,"byte_end":6513473,"line_start":618,"line_end":618,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6513478,"byte_end":6513511,"line_start":619,"line_end":619,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6513516,"byte_end":6513519,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6513524,"byte_end":6513538,"line_start":621,"line_end":621,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6513543,"byte_end":6513546,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6513551,"byte_end":6513562,"line_start":623,"line_end":623,"column_start":5,"column_end":16}},{"value":"/ # use std::mem;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6513567,"byte_end":6513586,"line_start":624,"line_end":624,"column_start":5,"column_end":24}},{"value":"/ # use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6513591,"byte_end":6513625,"line_start":625,"line_end":625,"column_start":5,"column_end":39}},{"value":"/ struct DataStructure {","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6513630,"byte_end":6513656,"line_start":626,"line_end":626,"column_start":5,"column_end":31}},{"value":"/     ptr: Atomic<usize>,","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6513661,"byte_end":6513688,"line_start":627,"line_end":627,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6513693,"byte_end":6513698,"line_start":628,"line_end":628,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6513703,"byte_end":6513706,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ impl Drop for DataStructure {","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6513711,"byte_end":6513744,"line_start":630,"line_end":630,"column_start":5,"column_end":38}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6513749,"byte_end":6513777,"line_start":631,"line_end":631,"column_start":5,"column_end":33}},{"value":"/         // By now the DataStructure lives only in our thread and we are sure we don't hold","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6513782,"byte_end":6513876,"line_start":632,"line_end":632,"column_start":5,"column_end":99}},{"value":"/         // any Shared or & to it ourselves.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6513881,"byte_end":6513928,"line_start":633,"line_end":633,"column_start":5,"column_end":52}},{"value":"/         unsafe {","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6513933,"byte_end":6513953,"line_start":634,"line_end":634,"column_start":5,"column_end":25}},{"value":"/             drop(mem::replace(&mut self.ptr, Atomic::null()).into_owned());","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6513958,"byte_end":6514037,"line_start":635,"line_end":635,"column_start":5,"column_end":84}},{"value":"/         }","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6514042,"byte_end":6514055,"line_start":636,"line_end":636,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6514060,"byte_end":6514069,"line_start":637,"line_end":637,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6514074,"byte_end":6514079,"line_start":638,"line_end":638,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6514084,"byte_end":6514091,"line_start":639,"line_end":639,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":162},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6516751,"byte_end":6516758,"line_start":743,"line_end":743,"column_start":11,"column_end":18},"name":"Pointer","qualname":"::atomic::Pointer","value":"Pointer<T: ?Sized + Pointable>","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165}],"decl_id":null,"docs":" A trait for either `Owned` or `Shared` pointers.\n","sig":null,"attributes":[{"value":"/ A trait for either `Owned` or `Shared` pointers.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6516688,"byte_end":6516740,"line_start":742,"line_end":742,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6516850,"byte_end":6516860,"line_start":745,"line_end":745,"column_start":8,"column_end":18},"name":"into_usize","qualname":"::atomic::Pointer::into_usize","value":"pub fn into_usize(Self) -> usize","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":" Returns the machine representation of the pointer.\n","sig":null,"attributes":[{"value":"/ Returns the machine representation of the pointer.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6516788,"byte_end":6516842,"line_start":744,"line_end":744,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6517167,"byte_end":6517177,"line_start":753,"line_end":753,"column_start":15,"column_end":25},"name":"from_usize","qualname":"::atomic::Pointer::from_usize","value":"pub unsafe fn from_usize(usize) -> Self","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":" Returns a new pointer pointing to the tagged pointer `data`.","sig":null,"attributes":[{"value":"/ Returns a new pointer pointing to the tagged pointer `data`.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6516882,"byte_end":6516946,"line_start":747,"line_end":747,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6516951,"byte_end":6516954,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6516959,"byte_end":6516971,"line_start":749,"line_end":749,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6516976,"byte_end":6516979,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ The given `data` should have been created by `Pointer::into_usize()`, and one `data` should","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6516984,"byte_end":6517079,"line_start":751,"line_end":751,"column_start":5,"column_end":100}},{"value":"/ not be converted back by `Pointer::from_usize()` multiple times.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6517084,"byte_end":6517152,"line_start":752,"line_end":752,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":166},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6517443,"byte_end":6517448,"line_start":762,"line_end":762,"column_start":12,"column_end":17},"name":"Owned","qualname":"::atomic::Owned","value":"Owned {  }","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":169}],"decl_id":null,"docs":" An owned heap-allocated object.","sig":null,"attributes":[{"value":"/ An owned heap-allocated object.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6517203,"byte_end":6517238,"line_start":756,"line_end":756,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6517239,"byte_end":6517242,"line_start":757,"line_end":757,"column_start":1,"column_end":4}},{"value":"/ This type is very similar to `Box<T>`.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6517243,"byte_end":6517285,"line_start":758,"line_end":758,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6517286,"byte_end":6517289,"line_start":759,"line_end":759,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6517290,"byte_end":6517388,"line_start":760,"line_end":760,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6517389,"byte_end":6517431,"line_start":761,"line_end":761,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6518846,"byte_end":6518854,"line_start":813,"line_end":813,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Owned<T>>::from_raw","value":"pub unsafe fn from_raw(*mut T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new owned pointer pointing to `raw`.","sig":null,"attributes":[{"value":"/ Returns a new owned pointer pointing to `raw`.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6518098,"byte_end":6518148,"line_start":791,"line_end":791,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6518153,"byte_end":6518156,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because improper use may lead to memory problems. Argument `raw`","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6518161,"byte_end":6518253,"line_start":793,"line_end":793,"column_start":5,"column_end":97}},{"value":"/ must be a valid pointer. Also, a double-free may occur if the function is called twice on","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6518258,"byte_end":6518351,"line_start":794,"line_end":794,"column_start":5,"column_end":98}},{"value":"/ the same raw pointer.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6518356,"byte_end":6518381,"line_start":795,"line_end":795,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6518386,"byte_end":6518389,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6518394,"byte_end":6518406,"line_start":797,"line_end":797,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6518411,"byte_end":6518414,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ Panics if `raw` is not properly aligned.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6518419,"byte_end":6518463,"line_start":799,"line_end":799,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6518468,"byte_end":6518471,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6518476,"byte_end":6518488,"line_start":801,"line_end":801,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6518493,"byte_end":6518496,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ The given `raw` should have been derived from `Owned`, and one `raw` should not be converted","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6518501,"byte_end":6518597,"line_start":803,"line_end":803,"column_start":5,"column_end":101}},{"value":"/ back by `Owned::from_raw()` multiple times.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6518602,"byte_end":6518649,"line_start":804,"line_end":804,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6518654,"byte_end":6518657,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6518662,"byte_end":6518676,"line_start":806,"line_end":806,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6518681,"byte_end":6518684,"line_start":807,"line_end":807,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6518689,"byte_end":6518696,"line_start":808,"line_end":808,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6518701,"byte_end":6518732,"line_start":809,"line_end":809,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6518737,"byte_end":6518740,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ let o = unsafe { Owned::from_raw(Box::into_raw(Box::new(1234))) };","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6518745,"byte_end":6518815,"line_start":811,"line_end":811,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6518820,"byte_end":6518827,"line_start":812,"line_end":812,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6519252,"byte_end":6519260,"line_start":830,"line_end":830,"column_start":12,"column_end":20},"name":"into_box","qualname":"<Owned<T>>::into_box","value":"pub fn into_box(Self) -> Box<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a `Box`.","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a `Box`.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6518989,"byte_end":6519033,"line_start":819,"line_end":819,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6519038,"byte_end":6519041,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6519046,"byte_end":6519060,"line_start":821,"line_end":821,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6519065,"byte_end":6519068,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6519073,"byte_end":6519080,"line_start":823,"line_end":823,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6519085,"byte_end":6519116,"line_start":824,"line_end":824,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6519121,"byte_end":6519124,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6519129,"byte_end":6519158,"line_start":826,"line_end":826,"column_start":5,"column_end":34}},{"value":"/ let b: Box<i32> = o.into_box();","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6519163,"byte_end":6519198,"line_start":827,"line_end":827,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(*b, 1234);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6519203,"byte_end":6519228,"line_start":828,"line_end":828,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6519233,"byte_end":6519240,"line_start":829,"line_end":829,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6519649,"byte_end":6519652,"line_start":845,"line_end":845,"column_start":12,"column_end":15},"name":"new","qualname":"<Owned<T>>::new","value":"pub fn new(T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6519419,"byte_end":6519500,"line_start":836,"line_end":836,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6519505,"byte_end":6519508,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6519513,"byte_end":6519527,"line_start":838,"line_end":838,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6519532,"byte_end":6519535,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6519540,"byte_end":6519547,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6519552,"byte_end":6519583,"line_start":841,"line_end":841,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6519588,"byte_end":6519591,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6519596,"byte_end":6519625,"line_start":843,"line_end":843,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6519630,"byte_end":6519637,"line_start":844,"line_end":844,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6519991,"byte_end":6519995,"line_start":860,"line_end":860,"column_start":12,"column_end":16},"name":"init","qualname":"<Owned<T>>::init","value":"pub fn init(T::Init) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6519753,"byte_end":6519834,"line_start":851,"line_end":851,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6519839,"byte_end":6519842,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6519847,"byte_end":6519861,"line_start":853,"line_end":853,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6519866,"byte_end":6519869,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6519874,"byte_end":6519881,"line_start":855,"line_end":855,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6519886,"byte_end":6519917,"line_start":856,"line_end":856,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6519922,"byte_end":6519925,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::<i32>::init(1234);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6519930,"byte_end":6519967,"line_start":858,"line_end":858,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6519972,"byte_end":6519979,"line_start":859,"line_end":859,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6520416,"byte_end":6520427,"line_start":876,"line_end":876,"column_start":12,"column_end":23},"name":"into_shared","qualname":"<Owned<T>>::into_shared","value":"pub fn into_shared<'g>(Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a [`Shared`].","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a [`Shared`].","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6520087,"byte_end":6520136,"line_start":864,"line_end":864,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6520141,"byte_end":6520144,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6520149,"byte_end":6520163,"line_start":866,"line_end":866,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6520168,"byte_end":6520171,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6520176,"byte_end":6520183,"line_start":868,"line_end":868,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Owned};","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6520188,"byte_end":6520236,"line_start":869,"line_end":869,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6520241,"byte_end":6520244,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6520249,"byte_end":6520278,"line_start":871,"line_end":871,"column_start":5,"column_end":34}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6520283,"byte_end":6520313,"line_start":872,"line_end":872,"column_start":5,"column_end":35}},{"value":"/ let p = o.into_shared(guard);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6520318,"byte_end":6520351,"line_start":873,"line_end":873,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6520356,"byte_end":6520363,"line_start":874,"line_end":874,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6520368,"byte_end":6520404,"line_start":875,"line_end":875,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6520747,"byte_end":6520750,"line_start":889,"line_end":889,"column_start":12,"column_end":15},"name":"tag","qualname":"<Owned<T>>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6520539,"byte_end":6520585,"line_start":880,"line_end":880,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6520590,"byte_end":6520593,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6520598,"byte_end":6520612,"line_start":882,"line_end":882,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6520617,"byte_end":6520620,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6520625,"byte_end":6520632,"line_start":884,"line_end":884,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6520637,"byte_end":6520668,"line_start":885,"line_end":885,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6520673,"byte_end":6520676,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Owned::new(1234).tag(), 0);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6520681,"byte_end":6520723,"line_start":887,"line_end":887,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6520728,"byte_end":6520735,"line_start":888,"line_end":888,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6521223,"byte_end":6521231,"line_start":907,"line_end":907,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Owned<T>>::with_tag","value":"pub fn with_tag(Self, usize) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6520846,"byte_end":6520936,"line_start":894,"line_end":894,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6520941,"byte_end":6520979,"line_start":895,"line_end":895,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6520984,"byte_end":6520987,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6520992,"byte_end":6521006,"line_start":897,"line_end":897,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6521011,"byte_end":6521014,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6521019,"byte_end":6521026,"line_start":899,"line_end":899,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6521031,"byte_end":6521062,"line_start":900,"line_end":900,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6521067,"byte_end":6521070,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(0u64);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6521075,"byte_end":6521104,"line_start":902,"line_end":902,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(o.tag(), 0);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6521109,"byte_end":6521136,"line_start":903,"line_end":903,"column_start":5,"column_end":32}},{"value":"/ let o = o.with_tag(2);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6521141,"byte_end":6521167,"line_start":904,"line_end":904,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(o.tag(), 2);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6521172,"byte_end":6521199,"line_start":905,"line_end":905,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6521204,"byte_end":6521211,"line_start":906,"line_end":906,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":220},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6523693,"byte_end":6523699,"line_start":1010,"line_end":1010,"column_start":12,"column_end":18},"name":"Shared","qualname":"::atomic::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":224}],"decl_id":null,"docs":" A pointer to an object protected by the epoch GC.","sig":null,"attributes":[{"value":"/ A pointer to an object protected by the epoch GC.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6523414,"byte_end":6523467,"line_start":1004,"line_end":1004,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6523468,"byte_end":6523471,"line_start":1005,"line_end":1005,"column_start":1,"column_end":4}},{"value":"/ The pointer is valid for use only during the lifetime `'g`.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6523472,"byte_end":6523535,"line_start":1006,"line_end":1006,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6523536,"byte_end":6523539,"line_start":1007,"line_end":1007,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6523540,"byte_end":6523638,"line_start":1008,"line_end":1008,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6523639,"byte_end":6523681,"line_start":1009,"line_end":1009,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6524870,"byte_end":6524876,"line_start":1059,"line_end":1059,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<Shared>::as_raw","value":"pub fn as_raw(&Self) -> *const T","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a raw pointer (without the tag).","sig":null,"attributes":[{"value":"/ Converts the pointer to a raw pointer (without the tag).","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6524351,"byte_end":6524411,"line_start":1042,"line_end":1042,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6524416,"byte_end":6524419,"line_start":1043,"line_end":1043,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6524424,"byte_end":6524438,"line_start":1044,"line_end":1044,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6524443,"byte_end":6524446,"line_start":1045,"line_end":1045,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6524451,"byte_end":6524458,"line_start":1046,"line_end":1046,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6524463,"byte_end":6524519,"line_start":1047,"line_end":1047,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6524524,"byte_end":6524568,"line_start":1048,"line_end":1048,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6524573,"byte_end":6524576,"line_start":1049,"line_end":1049,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6524581,"byte_end":6524610,"line_start":1050,"line_end":1050,"column_start":5,"column_end":34}},{"value":"/ let raw = &*o as *const _;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6524615,"byte_end":6524645,"line_start":1051,"line_end":1051,"column_start":5,"column_end":35}},{"value":"/ let a = Atomic::from(o);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6524650,"byte_end":6524678,"line_start":1052,"line_end":1052,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6524683,"byte_end":6524686,"line_start":1053,"line_end":1053,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6524691,"byte_end":6524721,"line_start":1054,"line_end":1054,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6524726,"byte_end":6524760,"line_start":1055,"line_end":1055,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.as_raw(), raw);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6524765,"byte_end":6524797,"line_start":1056,"line_end":1056,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6524802,"byte_end":6524809,"line_start":1057,"line_end":1057,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6524814,"byte_end":6524858,"line_start":1058,"line_end":1058,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6525253,"byte_end":6525257,"line_start":1076,"line_end":1076,"column_start":12,"column_end":16},"name":"null","qualname":"<Shared>::null","value":"pub fn null() -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null pointer.","sig":null,"attributes":[{"value":"/ Returns a new null pointer.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6525037,"byte_end":6525068,"line_start":1066,"line_end":1066,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6525073,"byte_end":6525076,"line_start":1067,"line_end":1067,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6525081,"byte_end":6525095,"line_start":1068,"line_end":1068,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6525100,"byte_end":6525103,"line_start":1069,"line_end":1069,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6525108,"byte_end":6525115,"line_start":1070,"line_end":1070,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Shared;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6525120,"byte_end":6525152,"line_start":1071,"line_end":1071,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6525157,"byte_end":6525160,"line_start":1072,"line_end":1072,"column_start":5,"column_end":8}},{"value":"/ let p = Shared::<i32>::null();","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6525165,"byte_end":6525199,"line_start":1073,"line_end":1073,"column_start":5,"column_end":39}},{"value":"/ assert!(p.is_null());","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6525204,"byte_end":6525229,"line_start":1074,"line_end":1074,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6525234,"byte_end":6525241,"line_start":1075,"line_end":1075,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6525863,"byte_end":6525870,"line_start":1098,"line_end":1098,"column_start":12,"column_end":19},"name":"is_null","qualname":"<Shared>::is_null","value":"pub fn is_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the pointer is null.","sig":null,"attributes":[{"value":"/ Returns `true` if the pointer is null.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6525372,"byte_end":6525414,"line_start":1083,"line_end":1083,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6525419,"byte_end":6525422,"line_start":1084,"line_end":1084,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6525427,"byte_end":6525441,"line_start":1085,"line_end":1085,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6525446,"byte_end":6525449,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6525454,"byte_end":6525461,"line_start":1087,"line_end":1087,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6525466,"byte_end":6525522,"line_start":1088,"line_end":1088,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6525527,"byte_end":6525571,"line_start":1089,"line_end":1089,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6525576,"byte_end":6525579,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::null();","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6525584,"byte_end":6525611,"line_start":1091,"line_end":1091,"column_start":5,"column_end":32}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6525616,"byte_end":6525646,"line_start":1092,"line_end":1092,"column_start":5,"column_end":35}},{"value":"/ assert!(a.load(SeqCst, guard).is_null());","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6525651,"byte_end":6525696,"line_start":1093,"line_end":1093,"column_start":5,"column_end":50}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6525701,"byte_end":6525739,"line_start":1094,"line_end":1094,"column_start":5,"column_end":43}},{"value":"/ assert!(!a.load(SeqCst, guard).is_null());","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6525744,"byte_end":6525790,"line_start":1095,"line_end":1095,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6525795,"byte_end":6525802,"line_start":1096,"line_end":1096,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6525807,"byte_end":6525851,"line_start":1097,"line_end":1097,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6527244,"byte_end":6527249,"line_start":1136,"line_end":1136,"column_start":19,"column_end":24},"name":"deref","qualname":"<Shared>::deref","value":"pub unsafe fn deref(&Self) -> &'g T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6525970,"byte_end":6525999,"line_start":1103,"line_end":1103,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6526004,"byte_end":6526007,"line_start":1104,"line_end":1104,"column_start":5,"column_end":8}},{"value":"/ Returns a reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6526012,"byte_end":6526090,"line_start":1105,"line_end":1105,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6526095,"byte_end":6526098,"line_start":1106,"line_end":1106,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6526103,"byte_end":6526115,"line_start":1107,"line_end":1107,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6526120,"byte_end":6526123,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6526128,"byte_end":6526213,"line_start":1109,"line_end":1109,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6526218,"byte_end":6526221,"line_start":1110,"line_end":1110,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6526226,"byte_end":6526317,"line_start":1111,"line_end":1111,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6526322,"byte_end":6526371,"line_start":1112,"line_end":1112,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6526376,"byte_end":6526379,"line_start":1113,"line_end":1113,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6526384,"byte_end":6526456,"line_start":1114,"line_end":1114,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6526461,"byte_end":6526536,"line_start":1115,"line_end":1115,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6526541,"byte_end":6526544,"line_start":1116,"line_end":1116,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6526549,"byte_end":6526642,"line_start":1117,"line_end":1117,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6526647,"byte_end":6526740,"line_start":1118,"line_end":1118,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6526745,"byte_end":6526783,"line_start":1119,"line_end":1119,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6526788,"byte_end":6526791,"line_start":1120,"line_end":1120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6526796,"byte_end":6526810,"line_start":1121,"line_end":1121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6526815,"byte_end":6526818,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6526823,"byte_end":6526830,"line_start":1123,"line_end":1123,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6526835,"byte_end":6526884,"line_start":1124,"line_end":1124,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6526889,"byte_end":6526933,"line_start":1125,"line_end":1125,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6526938,"byte_end":6526941,"line_start":1126,"line_end":1126,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6526946,"byte_end":6526976,"line_start":1127,"line_end":1127,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6526981,"byte_end":6527011,"line_start":1128,"line_end":1128,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6527016,"byte_end":6527050,"line_start":1129,"line_end":1129,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6527055,"byte_end":6527067,"line_start":1130,"line_end":1130,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &1234);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6527072,"byte_end":6527109,"line_start":1131,"line_end":1131,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6527114,"byte_end":6527119,"line_start":1132,"line_end":1132,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6527124,"byte_end":6527131,"line_start":1133,"line_end":1133,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6527136,"byte_end":6527180,"line_start":1134,"line_end":1134,"column_start":5,"column_end":49}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6527185,"byte_end":6527225,"line_start":1135,"line_end":1135,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6528560,"byte_end":6528569,"line_start":1178,"line_end":1178,"column_start":19,"column_end":28},"name":"deref_mut","qualname":"<Shared>::deref_mut","value":"pub unsafe fn deref_mut(&mut Self) -> &'g mut T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6527355,"byte_end":6527384,"line_start":1141,"line_end":1141,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6527389,"byte_end":6527392,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ Returns a mutable reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6527397,"byte_end":6527483,"line_start":1143,"line_end":1143,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6527488,"byte_end":6527491,"line_start":1144,"line_end":1144,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6527496,"byte_end":6527508,"line_start":1145,"line_end":1145,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6527513,"byte_end":6527516,"line_start":1146,"line_end":1146,"column_start":5,"column_end":8}},{"value":"/ * There is no guarantee that there are no more threads attempting to read/write from/to the","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6527521,"byte_end":6527616,"line_start":1147,"line_end":1147,"column_start":5,"column_end":100}},{"value":"/   actual object at the same time.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6527621,"byte_end":6527658,"line_start":1148,"line_end":1148,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6527663,"byte_end":6527666,"line_start":1149,"line_end":1149,"column_start":5,"column_end":8}},{"value":"/   The user must know that there are no concurrent accesses towards the object itself.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6527671,"byte_end":6527760,"line_start":1150,"line_end":1150,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6527765,"byte_end":6527768,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ * Other than the above, all safety concerns of `deref()` applies here.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6527773,"byte_end":6527847,"line_start":1152,"line_end":1152,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6527852,"byte_end":6527855,"line_start":1153,"line_end":1153,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6527860,"byte_end":6527874,"line_start":1154,"line_end":1154,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6527879,"byte_end":6527882,"line_start":1155,"line_end":1155,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6527887,"byte_end":6527894,"line_start":1156,"line_end":1156,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6527899,"byte_end":6527948,"line_start":1157,"line_end":1157,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6527953,"byte_end":6527997,"line_start":1158,"line_end":1158,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6528002,"byte_end":6528005,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(vec![1, 2, 3, 4]);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6528010,"byte_end":6528052,"line_start":1160,"line_end":1160,"column_start":5,"column_end":47}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6528057,"byte_end":6528087,"line_start":1161,"line_end":1161,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6528092,"byte_end":6528095,"line_start":1162,"line_end":1162,"column_start":5,"column_end":8}},{"value":"/ let mut p = a.load(SeqCst, guard);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6528100,"byte_end":6528138,"line_start":1163,"line_end":1163,"column_start":5,"column_end":43}},{"value":"/ unsafe {","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6528143,"byte_end":6528155,"line_start":1164,"line_end":1164,"column_start":5,"column_end":17}},{"value":"/     assert!(!p.is_null());","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6528160,"byte_end":6528190,"line_start":1165,"line_end":1165,"column_start":5,"column_end":35}},{"value":"/     let b = p.deref_mut();","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6528195,"byte_end":6528225,"line_start":1166,"line_end":1166,"column_start":5,"column_end":35}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4]);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6528230,"byte_end":6528271,"line_start":1167,"line_end":1167,"column_start":5,"column_end":46}},{"value":"/     b.push(5);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6528276,"byte_end":6528294,"line_start":1168,"line_end":1168,"column_start":5,"column_end":23}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4, 5]);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6528299,"byte_end":6528343,"line_start":1169,"line_end":1169,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6528348,"byte_end":6528353,"line_start":1170,"line_end":1170,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6528358,"byte_end":6528361,"line_start":1171,"line_end":1171,"column_start":5,"column_end":8}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6528366,"byte_end":6528400,"line_start":1172,"line_end":1172,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6528405,"byte_end":6528417,"line_start":1173,"line_end":1173,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &vec![1, 2, 3, 4, 5]);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6528422,"byte_end":6528474,"line_start":1174,"line_end":1174,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6528479,"byte_end":6528484,"line_start":1175,"line_end":1175,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6528489,"byte_end":6528496,"line_start":1176,"line_end":1176,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6528501,"byte_end":6528541,"line_start":1177,"line_end":1177,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6529951,"byte_end":6529957,"line_start":1215,"line_end":1215,"column_start":19,"column_end":25},"name":"as_ref","qualname":"<Shared>::as_ref","value":"pub unsafe fn as_ref(&Self) -> Option<&'g T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a reference.","sig":null,"attributes":[{"value":"/ Converts the pointer to a reference.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6528687,"byte_end":6528727,"line_start":1183,"line_end":1183,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6528732,"byte_end":6528735,"line_start":1184,"line_end":1184,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the pointer is null, or else a reference to the object wrapped in `Some`.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6528740,"byte_end":6528835,"line_start":1185,"line_end":1185,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6528840,"byte_end":6528843,"line_start":1186,"line_end":1186,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6528848,"byte_end":6528860,"line_start":1187,"line_end":1187,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6528865,"byte_end":6528868,"line_start":1188,"line_end":1188,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6528873,"byte_end":6528958,"line_start":1189,"line_end":1189,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6528963,"byte_end":6528966,"line_start":1190,"line_end":1190,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6528971,"byte_end":6529062,"line_start":1191,"line_end":1191,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6529067,"byte_end":6529116,"line_start":1192,"line_end":1192,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6529121,"byte_end":6529124,"line_start":1193,"line_end":1193,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6529129,"byte_end":6529201,"line_start":1194,"line_end":1194,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6529206,"byte_end":6529281,"line_start":1195,"line_end":1195,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6529286,"byte_end":6529289,"line_start":1196,"line_end":1196,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6529294,"byte_end":6529387,"line_start":1197,"line_end":1197,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6529392,"byte_end":6529485,"line_start":1198,"line_end":1198,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6529490,"byte_end":6529528,"line_start":1199,"line_end":1199,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6529533,"byte_end":6529536,"line_start":1200,"line_end":1200,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6529541,"byte_end":6529555,"line_start":1201,"line_end":1201,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6529560,"byte_end":6529563,"line_start":1202,"line_end":1202,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6529568,"byte_end":6529575,"line_start":1203,"line_end":1203,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6529580,"byte_end":6529629,"line_start":1204,"line_end":1204,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6529634,"byte_end":6529678,"line_start":1205,"line_end":1205,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6529683,"byte_end":6529686,"line_start":1206,"line_end":1206,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6529691,"byte_end":6529721,"line_start":1207,"line_end":1207,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6529726,"byte_end":6529756,"line_start":1208,"line_end":1208,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6529761,"byte_end":6529795,"line_start":1209,"line_end":1209,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6529800,"byte_end":6529812,"line_start":1210,"line_end":1210,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.as_ref(), Some(&1234));","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6529817,"byte_end":6529861,"line_start":1211,"line_end":1211,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6529866,"byte_end":6529871,"line_start":1212,"line_end":1212,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6529876,"byte_end":6529883,"line_start":1213,"line_end":1213,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6529888,"byte_end":6529932,"line_start":1214,"line_end":1214,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6530817,"byte_end":6530827,"line_start":1248,"line_end":1248,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Shared>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6530147,"byte_end":6530182,"line_start":1224,"line_end":1224,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6530187,"byte_end":6530190,"line_start":1225,"line_end":1225,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6530195,"byte_end":6530207,"line_start":1226,"line_end":1226,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6530212,"byte_end":6530215,"line_start":1227,"line_end":1227,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6530220,"byte_end":6530279,"line_start":1228,"line_end":1228,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6530284,"byte_end":6530287,"line_start":1229,"line_end":1229,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6530292,"byte_end":6530304,"line_start":1230,"line_end":1230,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6530309,"byte_end":6530312,"line_start":1231,"line_end":1231,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6530317,"byte_end":6530404,"line_start":1232,"line_end":1232,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6530409,"byte_end":6530442,"line_start":1233,"line_end":1233,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6530447,"byte_end":6530450,"line_start":1234,"line_end":1234,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6530455,"byte_end":6530469,"line_start":1235,"line_end":1235,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6530474,"byte_end":6530477,"line_start":1236,"line_end":1236,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6530482,"byte_end":6530489,"line_start":1237,"line_end":1237,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6530494,"byte_end":6530543,"line_start":1238,"line_end":1238,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6530548,"byte_end":6530592,"line_start":1239,"line_end":1239,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6530597,"byte_end":6530600,"line_start":1240,"line_end":1240,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6530605,"byte_end":6530635,"line_start":1241,"line_end":1241,"column_start":5,"column_end":35}},{"value":"/ unsafe {","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6530640,"byte_end":6530652,"line_start":1242,"line_end":1242,"column_start":5,"column_end":17}},{"value":"/     let guard = &epoch::unprotected();","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6530657,"byte_end":6530699,"line_start":1243,"line_end":1243,"column_start":5,"column_end":47}},{"value":"/     let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6530704,"byte_end":6530742,"line_start":1244,"line_end":1244,"column_start":5,"column_end":43}},{"value":"/     drop(p.into_owned());","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6530747,"byte_end":6530776,"line_start":1245,"line_end":1245,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6530781,"byte_end":6530786,"line_start":1246,"line_end":1246,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6530791,"byte_end":6530798,"line_start":1247,"line_end":1247,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6531436,"byte_end":6531439,"line_start":1267,"line_end":1267,"column_start":12,"column_end":15},"name":"tag","qualname":"<Shared>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6530979,"byte_end":6531025,"line_start":1253,"line_end":1253,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6531030,"byte_end":6531033,"line_start":1254,"line_end":1254,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6531038,"byte_end":6531052,"line_start":1255,"line_end":1255,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6531057,"byte_end":6531060,"line_start":1256,"line_end":1256,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6531065,"byte_end":6531072,"line_start":1257,"line_end":1257,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6531077,"byte_end":6531133,"line_start":1258,"line_end":1258,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6531138,"byte_end":6531182,"line_start":1259,"line_end":1259,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6531187,"byte_end":6531190,"line_start":1260,"line_end":1260,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<u64>::from(Owned::new(0u64).with_tag(2));","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6531195,"byte_end":6531257,"line_start":1261,"line_end":1261,"column_start":5,"column_end":67}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6531262,"byte_end":6531292,"line_start":1262,"line_end":1262,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6531297,"byte_end":6531331,"line_start":1263,"line_end":1263,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.tag(), 2);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6531336,"byte_end":6531363,"line_start":1264,"line_end":1264,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6531368,"byte_end":6531375,"line_start":1265,"line_end":1265,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6531380,"byte_end":6531424,"line_start":1266,"line_end":1266,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6532162,"byte_end":6532170,"line_start":1291,"line_end":1291,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Shared>::with_tag","value":"pub fn with_tag(&Self, usize) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6531535,"byte_end":6531625,"line_start":1272,"line_end":1272,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6531630,"byte_end":6531668,"line_start":1273,"line_end":1273,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6531673,"byte_end":6531676,"line_start":1274,"line_end":1274,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6531681,"byte_end":6531695,"line_start":1275,"line_end":1275,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6531700,"byte_end":6531703,"line_start":1276,"line_end":1276,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6531708,"byte_end":6531715,"line_start":1277,"line_end":1277,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6531720,"byte_end":6531769,"line_start":1278,"line_end":1278,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6531774,"byte_end":6531818,"line_start":1279,"line_end":1279,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6531823,"byte_end":6531826,"line_start":1280,"line_end":1280,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(0u64);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6531831,"byte_end":6531861,"line_start":1281,"line_end":1281,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6531866,"byte_end":6531896,"line_start":1282,"line_end":1282,"column_start":5,"column_end":35}},{"value":"/ let p1 = a.load(SeqCst, guard);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6531901,"byte_end":6531936,"line_start":1283,"line_end":1283,"column_start":5,"column_end":40}},{"value":"/ let p2 = p1.with_tag(2);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6531941,"byte_end":6531969,"line_start":1284,"line_end":1284,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6531974,"byte_end":6531977,"line_start":1285,"line_end":1285,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(p1.tag(), 0);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6531982,"byte_end":6532010,"line_start":1286,"line_end":1286,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p2.tag(), 2);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6532015,"byte_end":6532043,"line_start":1287,"line_end":1287,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p1.as_raw(), p2.as_raw());","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6532048,"byte_end":6532089,"line_start":1288,"line_end":1288,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6532094,"byte_end":6532101,"line_start":1289,"line_end":1289,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6532106,"byte_end":6532150,"line_start":1290,"line_end":1290,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":281},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":6534681,"byte_end":6534690,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"Collector","qualname":"::collector::Collector","value":"Collector {  }","parent":null,"children":[{"krate":0,"index":282}],"decl_id":null,"docs":" An epoch-based garbage collector.\n","sig":null,"attributes":[{"value":"/ An epoch-based garbage collector.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":6534632,"byte_end":6534669,"line_start":21,"line_end":21,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":6534997,"byte_end":6535000,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Collector>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new collector.\n","sig":null,"attributes":[{"value":"/ Creates a new collector.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":6534957,"byte_end":6534985,"line_start":38,"line_end":38,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":6535105,"byte_end":6535113,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"register","qualname":"<Collector>::register","value":"pub fn register(&Self) -> LocalHandle","parent":null,"children":[],"decl_id":null,"docs":" Registers a new handle for the collector.\n","sig":null,"attributes":[{"value":"/ Registers a new handle for the collector.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":6535048,"byte_end":6535093,"line_start":43,"line_end":43,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":297},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":6535781,"byte_end":6535792,"line_start":73,"line_end":73,"column_start":12,"column_end":23},"name":"LocalHandle","qualname":"::collector::LocalHandle","value":"LocalHandle {  }","parent":null,"children":[{"krate":0,"index":298}],"decl_id":null,"docs":" A handle to a garbage collector.\n","sig":null,"attributes":[{"value":"/ A handle to a garbage collector.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":6535733,"byte_end":6535769,"line_start":72,"line_end":72,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":6535903,"byte_end":6535906,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"pin","qualname":"<LocalHandle>::pin","value":"pub fn pin(&Self) -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the handle.\n","sig":null,"attributes":[{"value":"/ Pins the handle.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":6535857,"byte_end":6535877,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":6535882,"byte_end":6535891,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":6536044,"byte_end":6536053,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"is_pinned","qualname":"<LocalHandle>::is_pinned","value":"pub fn is_pinned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the handle is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the handle is pinned.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":6535975,"byte_end":6536018,"line_start":84,"line_end":84,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":6536023,"byte_end":6536032,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":6536209,"byte_end":6536218,"line_start":92,"line_end":92,"column_start":12,"column_end":21},"name":"collector","qualname":"<LocalHandle>::collector","value":"pub fn collector(&Self) -> &Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this handle.\n","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this handle.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":6536127,"byte_end":6536183,"line_start":90,"line_end":90,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":6536188,"byte_end":6536197,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":356},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6555106,"byte_end":6555111,"line_start":70,"line_end":70,"column_start":12,"column_end":17},"name":"Guard","qualname":"::guard::Guard","value":"Guard {  }","parent":null,"children":[{"krate":0,"index":357}],"decl_id":null,"docs":" A guard that keeps the current thread pinned.","sig":null,"attributes":[{"value":"/ A guard that keeps the current thread pinned.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6553390,"byte_end":6553439,"line_start":11,"line_end":11,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6553440,"byte_end":6553443,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6553444,"byte_end":6553457,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6553458,"byte_end":6553461,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The current thread is pinned by calling [`pin`], which returns a new guard:","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6553462,"byte_end":6553541,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6553542,"byte_end":6553545,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6553546,"byte_end":6553553,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6553554,"byte_end":6553587,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6553588,"byte_end":6553591,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ // It is often convenient to prefix a call to `pin` with a `&` in order to create a reference.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6553592,"byte_end":6553690,"line_start":20,"line_end":20,"column_start":1,"column_end":99}},{"value":"/ // This is not really necessary, but makes passing references to the guard a bit easier.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6553691,"byte_end":6553783,"line_start":21,"line_end":21,"column_start":1,"column_end":93}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6553784,"byte_end":6553814,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6553815,"byte_end":6553822,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6553823,"byte_end":6553826,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ When a guard gets dropped, the current thread is automatically unpinned.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6553827,"byte_end":6553903,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6553904,"byte_end":6553907,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Pointers on the stack","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6553908,"byte_end":6553935,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6553936,"byte_end":6553939,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Having a guard allows us to create pointers on the stack to heap-allocated objects.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6553940,"byte_end":6554027,"line_start":29,"line_end":29,"column_start":1,"column_end":88}},{"value":"/ For example:","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6554028,"byte_end":6554044,"line_start":30,"line_end":30,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6554045,"byte_end":6554048,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6554049,"byte_end":6554056,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6554057,"byte_end":6554106,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6554107,"byte_end":6554151,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6554152,"byte_end":6554155,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Create a heap-allocated number.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6554156,"byte_end":6554194,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6554195,"byte_end":6554224,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6554225,"byte_end":6554228,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ // Pin the current thread.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6554229,"byte_end":6554259,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6554260,"byte_end":6554290,"line_start":40,"line_end":40,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6554291,"byte_end":6554294,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Load the heap-allocated object and create pointer `p` on the stack.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6554295,"byte_end":6554369,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6554370,"byte_end":6554404,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6554405,"byte_end":6554408,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // Dereference the pointer and print the value:","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6554409,"byte_end":6554460,"line_start":45,"line_end":45,"column_start":1,"column_end":52}},{"value":"/ if let Some(num) = unsafe { p.as_ref() } {","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6554461,"byte_end":6554507,"line_start":46,"line_end":46,"column_start":1,"column_end":47}},{"value":"/     println!(\"The number is {}.\", num);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6554508,"byte_end":6554551,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6554552,"byte_end":6554557,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6554558,"byte_end":6554565,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6554566,"byte_end":6554569,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Multiple guards","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6554570,"byte_end":6554591,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6554592,"byte_end":6554595,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Pinning is reentrant and it is perfectly legal to create multiple guards. In that case, the","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6554596,"byte_end":6554691,"line_start":53,"line_end":53,"column_start":1,"column_end":96}},{"value":"/ thread will actually be pinned only when the first guard is created and unpinned when the last","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6554692,"byte_end":6554790,"line_start":54,"line_end":54,"column_start":1,"column_end":99}},{"value":"/ one is dropped:","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6554791,"byte_end":6554810,"line_start":55,"line_end":55,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6554811,"byte_end":6554814,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6554815,"byte_end":6554822,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6554823,"byte_end":6554856,"line_start":58,"line_end":58,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6554857,"byte_end":6554860,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6554861,"byte_end":6554891,"line_start":60,"line_end":60,"column_start":1,"column_end":31}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6554892,"byte_end":6554922,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6554923,"byte_end":6554955,"line_start":62,"line_end":62,"column_start":1,"column_end":33}},{"value":"/ drop(guard1);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6554956,"byte_end":6554973,"line_start":63,"line_end":63,"column_start":1,"column_end":18}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6554974,"byte_end":6555006,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/ drop(guard2);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6555007,"byte_end":6555024,"line_start":65,"line_end":65,"column_start":1,"column_end":18}},{"value":"/ assert!(!epoch::is_pinned());","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6555025,"byte_end":6555058,"line_start":66,"line_end":66,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6555059,"byte_end":6555066,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6555067,"byte_end":6555070,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ [`pin`]: super::pin","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6555071,"byte_end":6555094,"line_start":69,"line_end":69,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6556086,"byte_end":6556091,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"defer","qualname":"<Guard>::defer","value":"pub fn defer<F, R>(&Self, F) where F: FnOnce() -> R, F: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6555170,"byte_end":6555259,"line_start":75,"line_end":75,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6555264,"byte_end":6555289,"line_start":76,"line_end":76,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6555294,"byte_end":6555297,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6555302,"byte_end":6555395,"line_start":78,"line_end":78,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6555400,"byte_end":6555488,"line_start":79,"line_end":79,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6555493,"byte_end":6555583,"line_start":80,"line_end":80,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6555588,"byte_end":6555628,"line_start":81,"line_end":81,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6555633,"byte_end":6555636,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6555641,"byte_end":6555731,"line_start":83,"line_end":83,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6555736,"byte_end":6555827,"line_start":84,"line_end":84,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6555832,"byte_end":6555919,"line_start":85,"line_end":85,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6555924,"byte_end":6555944,"line_start":86,"line_end":86,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6555949,"byte_end":6555952,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6555957,"byte_end":6556044,"line_start":88,"line_end":88,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6556049,"byte_end":6556074,"line_start":89,"line_end":89,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6560391,"byte_end":6560406,"line_start":188,"line_end":188,"column_start":19,"column_end":34},"name":"defer_unchecked","qualname":"<Guard>::defer_unchecked","value":"pub unsafe fn defer_unchecked<F, R>(&Self, F) where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6556255,"byte_end":6556344,"line_start":100,"line_end":100,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6556349,"byte_end":6556374,"line_start":101,"line_end":101,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6556379,"byte_end":6556382,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6556387,"byte_end":6556480,"line_start":103,"line_end":103,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6556485,"byte_end":6556573,"line_start":104,"line_end":104,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6556578,"byte_end":6556668,"line_start":105,"line_end":105,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6556673,"byte_end":6556713,"line_start":106,"line_end":106,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6556718,"byte_end":6556721,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6556726,"byte_end":6556816,"line_start":108,"line_end":108,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6556821,"byte_end":6556912,"line_start":109,"line_end":109,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6556917,"byte_end":6557004,"line_start":110,"line_end":110,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6557009,"byte_end":6557029,"line_start":111,"line_end":111,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6557034,"byte_end":6557037,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6557042,"byte_end":6557129,"line_start":113,"line_end":113,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6557134,"byte_end":6557159,"line_start":114,"line_end":114,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6557164,"byte_end":6557167,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6557172,"byte_end":6557184,"line_start":116,"line_end":116,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6557189,"byte_end":6557192,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ The given function must not hold reference onto the stack. It is highly recommended that","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6557197,"byte_end":6557289,"line_start":118,"line_end":118,"column_start":5,"column_end":97}},{"value":"/ the passed function is **always** marked with `move` in order to prevent accidental","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6557294,"byte_end":6557381,"line_start":119,"line_end":119,"column_start":5,"column_end":92}},{"value":"/ borrows.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6557386,"byte_end":6557398,"line_start":120,"line_end":120,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6557403,"byte_end":6557406,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6557411,"byte_end":6557418,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6557423,"byte_end":6557456,"line_start":123,"line_end":123,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6557461,"byte_end":6557464,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6557469,"byte_end":6557499,"line_start":125,"line_end":125,"column_start":5,"column_end":35}},{"value":"/ let message = \"Hello!\";","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6557504,"byte_end":6557531,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/ unsafe {","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6557536,"byte_end":6557548,"line_start":127,"line_end":127,"column_start":5,"column_end":17}},{"value":"/     // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6557553,"byte_end":6557628,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/     guard.defer_unchecked(move || {","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6557633,"byte_end":6557672,"line_start":129,"line_end":129,"column_start":5,"column_end":44}},{"value":"/         println!(\"{}\", message);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6557677,"byte_end":6557713,"line_start":130,"line_end":130,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6557718,"byte_end":6557729,"line_start":131,"line_end":131,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6557734,"byte_end":6557739,"line_start":132,"line_end":132,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6557744,"byte_end":6557751,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6557756,"byte_end":6557759,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute `f`, so anything accessed by","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6557764,"byte_end":6557858,"line_start":135,"line_end":135,"column_start":5,"column_end":99}},{"value":"/ the closure must be `Send`.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6557863,"byte_end":6557894,"line_start":136,"line_end":136,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6557899,"byte_end":6557902,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `F: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6557907,"byte_end":6558002,"line_start":138,"line_end":138,"column_start":5,"column_end":100}},{"value":"/ `F: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6558007,"byte_end":6558099,"line_start":139,"line_end":139,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6558104,"byte_end":6558193,"line_start":140,"line_end":140,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6558198,"byte_end":6558201,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6558206,"byte_end":6558219,"line_start":142,"line_end":142,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6558224,"byte_end":6558277,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/ guard.defer_unchecked(move || shared.into_owned()); // `Shared` is not `Send`!","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6558282,"byte_end":6558364,"line_start":144,"line_end":144,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6558369,"byte_end":6558376,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6558381,"byte_end":6558384,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the deferred function,","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6558389,"byte_end":6558482,"line_start":147,"line_end":147,"column_start":5,"column_end":98}},{"value":"/ because it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6558487,"byte_end":6558582,"line_start":148,"line_end":148,"column_start":5,"column_end":100}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6558587,"byte_end":6558647,"line_start":149,"line_end":149,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6558652,"byte_end":6558655,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6558660,"byte_end":6558674,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6558679,"byte_end":6558682,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6558687,"byte_end":6558773,"line_start":153,"line_end":153,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6558778,"byte_end":6558872,"line_start":154,"line_end":154,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6558877,"byte_end":6558973,"line_start":155,"line_end":155,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6558978,"byte_end":6559070,"line_start":156,"line_end":156,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6559075,"byte_end":6559131,"line_start":157,"line_end":157,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6559136,"byte_end":6559139,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6559144,"byte_end":6559151,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6559156,"byte_end":6559212,"line_start":160,"line_end":160,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6559217,"byte_end":6559261,"line_start":161,"line_end":161,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6559266,"byte_end":6559269,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6559274,"byte_end":6559305,"line_start":163,"line_end":163,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6559310,"byte_end":6559313,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6559318,"byte_end":6559395,"line_start":165,"line_end":165,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6559400,"byte_end":6559431,"line_start":166,"line_end":166,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6559436,"byte_end":6559439,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6559444,"byte_end":6559474,"line_start":168,"line_end":168,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6559479,"byte_end":6559509,"line_start":169,"line_end":169,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6559514,"byte_end":6559517,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6559522,"byte_end":6559599,"line_start":171,"line_end":171,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6559604,"byte_end":6559676,"line_start":172,"line_end":172,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6559681,"byte_end":6559684,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6559689,"byte_end":6559710,"line_start":174,"line_end":174,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6559715,"byte_end":6559775,"line_start":175,"line_end":175,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6559780,"byte_end":6559862,"line_start":176,"line_end":176,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6559867,"byte_end":6559883,"line_start":177,"line_end":177,"column_start":5,"column_end":21}},{"value":"/         // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6559888,"byte_end":6559967,"line_start":178,"line_end":178,"column_start":5,"column_end":84}},{"value":"/         guard.defer_unchecked(move || {","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6559972,"byte_end":6560015,"line_start":179,"line_end":179,"column_start":5,"column_end":48}},{"value":"/             println!(\"{} is now being deallocated.\", p.deref());","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6560020,"byte_end":6560088,"line_start":180,"line_end":180,"column_start":5,"column_end":73}},{"value":"/             // Now we have unique access to the object pointed to by `p` and can turn it","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6560093,"byte_end":6560185,"line_start":181,"line_end":181,"column_start":5,"column_end":97}},{"value":"/             // into an `Owned`. Dropping the `Owned` will deallocate the object.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6560190,"byte_end":6560274,"line_start":182,"line_end":182,"column_start":5,"column_end":89}},{"value":"/             drop(p.into_owned());","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6560279,"byte_end":6560316,"line_start":183,"line_end":183,"column_start":5,"column_end":42}},{"value":"/         });","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6560321,"byte_end":6560336,"line_start":184,"line_end":184,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6560341,"byte_end":6560350,"line_start":185,"line_end":185,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6560355,"byte_end":6560360,"line_start":186,"line_end":186,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6560365,"byte_end":6560372,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6563993,"byte_end":6564006,"line_start":267,"line_end":267,"column_start":19,"column_end":32},"name":"defer_destroy","qualname":"<Guard>::defer_destroy","value":"pub unsafe fn defer_destroy<T>(&Self, Shared<, T>)","parent":null,"children":[],"decl_id":null,"docs":" Stores a destructor for an object so that it can be deallocated and dropped at some point\n after all currently pinned threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a destructor for an object so that it can be deallocated and dropped at some point","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6560645,"byte_end":6560738,"line_start":199,"line_end":199,"column_start":5,"column_end":98}},{"value":"/ after all currently pinned threads get unpinned.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6560743,"byte_end":6560795,"line_start":200,"line_end":200,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6560800,"byte_end":6560803,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ This method first stores the destructor into the thread-local (or handle-local) cache. If","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6560808,"byte_end":6560901,"line_start":202,"line_end":202,"column_start":5,"column_end":98}},{"value":"/ this cache becomes full, some destructors are moved into the global cache. At the same","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6560906,"byte_end":6560996,"line_start":203,"line_end":203,"column_start":5,"column_end":95}},{"value":"/ time, some destructors from both local and global caches may get executed in order to","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6561001,"byte_end":6561090,"line_start":204,"line_end":204,"column_start":5,"column_end":94}},{"value":"/ incrementally clean up the caches as they fill up.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6561095,"byte_end":6561149,"line_start":205,"line_end":205,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6561154,"byte_end":6561157,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly the destructor will be executed. The only guarantee is","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6561162,"byte_end":6561255,"line_start":207,"line_end":207,"column_start":5,"column_end":98}},{"value":"/ that it won't be executed until all currently pinned threads get unpinned. In theory, the","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6561260,"byte_end":6561353,"line_start":208,"line_end":208,"column_start":5,"column_end":98}},{"value":"/ destructor might never run, but the epoch-based garbage collection will make an effort to","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6561358,"byte_end":6561451,"line_start":209,"line_end":209,"column_start":5,"column_end":98}},{"value":"/ execute it reasonably soon.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6561456,"byte_end":6561487,"line_start":210,"line_end":210,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6561492,"byte_end":6561495,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the destructor will simply be","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6561500,"byte_end":6561589,"line_start":212,"line_end":212,"column_start":5,"column_end":94}},{"value":"/ executed immediately.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6561594,"byte_end":6561619,"line_start":213,"line_end":213,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6561624,"byte_end":6561627,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6561632,"byte_end":6561644,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6561649,"byte_end":6561652,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ The object must not be reachable by other threads anymore, otherwise it might be still in","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6561657,"byte_end":6561750,"line_start":217,"line_end":217,"column_start":5,"column_end":98}},{"value":"/ use when the destructor runs.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6561755,"byte_end":6561788,"line_start":218,"line_end":218,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6561793,"byte_end":6561796,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute the destructor, so the object","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6561801,"byte_end":6561896,"line_start":220,"line_end":220,"column_start":5,"column_end":100}},{"value":"/ must be sendable to other threads.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6561901,"byte_end":6561939,"line_start":221,"line_end":221,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6561944,"byte_end":6561947,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `T: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6561952,"byte_end":6562047,"line_start":223,"line_end":223,"column_start":5,"column_end":100}},{"value":"/ `T: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6562052,"byte_end":6562144,"line_start":224,"line_end":224,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6562149,"byte_end":6562238,"line_start":225,"line_end":225,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6562243,"byte_end":6562246,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6562251,"byte_end":6562264,"line_start":227,"line_end":227,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6562269,"byte_end":6562322,"line_start":228,"line_end":228,"column_start":5,"column_end":58}},{"value":"/ guard.defer_destroy(shared); // `Shared` is not `Send`!","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6562327,"byte_end":6562386,"line_start":229,"line_end":229,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6562391,"byte_end":6562398,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6562403,"byte_end":6562406,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the destructor, because","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6562411,"byte_end":6562505,"line_start":232,"line_end":232,"column_start":5,"column_end":99}},{"value":"/ it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6562510,"byte_end":6562597,"line_start":233,"line_end":233,"column_start":5,"column_end":92}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6562602,"byte_end":6562662,"line_start":234,"line_end":234,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6562667,"byte_end":6562670,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6562675,"byte_end":6562689,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6562694,"byte_end":6562697,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6562702,"byte_end":6562788,"line_start":238,"line_end":238,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6562793,"byte_end":6562887,"line_start":239,"line_end":239,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6562892,"byte_end":6562988,"line_start":240,"line_end":240,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6562993,"byte_end":6563085,"line_start":241,"line_end":241,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6563090,"byte_end":6563146,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6563151,"byte_end":6563154,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6563159,"byte_end":6563166,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6563171,"byte_end":6563227,"line_start":245,"line_end":245,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6563232,"byte_end":6563276,"line_start":246,"line_end":246,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6563281,"byte_end":6563284,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6563289,"byte_end":6563320,"line_start":248,"line_end":248,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6563325,"byte_end":6563328,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6563333,"byte_end":6563410,"line_start":250,"line_end":250,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6563415,"byte_end":6563446,"line_start":251,"line_end":251,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6563451,"byte_end":6563454,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6563459,"byte_end":6563489,"line_start":253,"line_end":253,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6563494,"byte_end":6563524,"line_start":254,"line_end":254,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6563529,"byte_end":6563532,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6563537,"byte_end":6563614,"line_start":256,"line_end":256,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6563619,"byte_end":6563691,"line_start":257,"line_end":257,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6563696,"byte_end":6563699,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6563704,"byte_end":6563725,"line_start":259,"line_end":259,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6563730,"byte_end":6563790,"line_start":260,"line_end":260,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6563795,"byte_end":6563877,"line_start":261,"line_end":261,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6563882,"byte_end":6563898,"line_start":262,"line_end":262,"column_start":5,"column_end":21}},{"value":"/         guard.defer_destroy(p);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6563903,"byte_end":6563938,"line_start":263,"line_end":263,"column_start":5,"column_end":40}},{"value":"/     }","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6563943,"byte_end":6563952,"line_start":264,"line_end":264,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6563957,"byte_end":6563962,"line_start":265,"line_end":265,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6563967,"byte_end":6563974,"line_start":266,"line_end":266,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6564891,"byte_end":6564896,"line_start":291,"line_end":291,"column_start":12,"column_end":17},"name":"flush","qualname":"<Guard>::flush","value":"pub fn flush(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears up the thread-local cache of deferred functions by executing them or moving into the\n global cache.","sig":null,"attributes":[{"value":"/ Clears up the thread-local cache of deferred functions by executing them or moving into the","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6564106,"byte_end":6564201,"line_start":271,"line_end":271,"column_start":5,"column_end":100}},{"value":"/ global cache.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6564206,"byte_end":6564223,"line_start":272,"line_end":272,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6564228,"byte_end":6564231,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ Call this method after deferring execution of a function if you want to get it executed as","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6564236,"byte_end":6564330,"line_start":274,"line_end":274,"column_start":5,"column_end":99}},{"value":"/ soon as possible. Flushing will make sure it is residing in in the global cache, so that","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6564335,"byte_end":6564427,"line_start":275,"line_end":275,"column_start":5,"column_end":97}},{"value":"/ any thread has a chance of taking the function and executing it.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6564432,"byte_end":6564500,"line_start":276,"line_end":276,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6564505,"byte_end":6564508,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, it is a no-op (nothing happens).","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6564513,"byte_end":6564605,"line_start":278,"line_end":278,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6564610,"byte_end":6564613,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6564618,"byte_end":6564632,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6564637,"byte_end":6564640,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6564645,"byte_end":6564652,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6564657,"byte_end":6564690,"line_start":283,"line_end":283,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6564695,"byte_end":6564698,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6564703,"byte_end":6564733,"line_start":285,"line_end":285,"column_start":5,"column_end":35}},{"value":"/ guard.defer(move || {","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6564738,"byte_end":6564763,"line_start":286,"line_end":286,"column_start":5,"column_end":30}},{"value":"/     println!(\"This better be printed as soon as possible!\");","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6564768,"byte_end":6564832,"line_start":287,"line_end":287,"column_start":5,"column_end":69}},{"value":"/ });","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6564837,"byte_end":6564844,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"/ guard.flush();","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6564849,"byte_end":6564867,"line_start":289,"line_end":289,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6564872,"byte_end":6564879,"line_start":290,"line_end":290,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6566058,"byte_end":6566063,"line_start":324,"line_end":324,"column_start":12,"column_end":17},"name":"repin","qualname":"<Guard>::repin","value":"pub fn repin(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Unpins and then immediately re-pins the thread.","sig":null,"attributes":[{"value":"/ Unpins and then immediately re-pins the thread.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6565020,"byte_end":6565071,"line_start":297,"line_end":297,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6565076,"byte_end":6565079,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you don't want delay the advancement of the global epoch by","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6565084,"byte_end":6565174,"line_start":299,"line_end":299,"column_start":5,"column_end":95}},{"value":"/ holding an old epoch. For safety, you should not maintain any guard-based reference across","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6565179,"byte_end":6565273,"line_start":300,"line_end":300,"column_start":5,"column_end":99}},{"value":"/ the call (the latter is enforced by `&mut self`). The thread will only be repinned if this","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6565278,"byte_end":6565372,"line_start":301,"line_end":301,"column_start":5,"column_end":99}},{"value":"/ is the only active guard for the current thread.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6565377,"byte_end":6565429,"line_start":302,"line_end":302,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6565434,"byte_end":6565437,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the call will be just no-op.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6565442,"byte_end":6565535,"line_start":304,"line_end":304,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6565540,"byte_end":6565543,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6565548,"byte_end":6565562,"line_start":306,"line_end":306,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6565567,"byte_end":6565570,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6565575,"byte_end":6565582,"line_start":308,"line_end":308,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6565587,"byte_end":6565636,"line_start":309,"line_end":309,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6565641,"byte_end":6565685,"line_start":310,"line_end":310,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6565690,"byte_end":6565693,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6565698,"byte_end":6565727,"line_start":312,"line_end":312,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6565732,"byte_end":6565765,"line_start":313,"line_end":313,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6565770,"byte_end":6565775,"line_start":314,"line_end":314,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6565780,"byte_end":6565819,"line_start":315,"line_end":315,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6565824,"byte_end":6565878,"line_start":316,"line_end":316,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6565883,"byte_end":6565888,"line_start":317,"line_end":317,"column_start":5,"column_end":10}},{"value":"/ guard.repin();","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6565893,"byte_end":6565911,"line_start":318,"line_end":318,"column_start":5,"column_end":23}},{"value":"/ {","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6565916,"byte_end":6565921,"line_start":319,"line_end":319,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6565926,"byte_end":6565965,"line_start":320,"line_end":320,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6565970,"byte_end":6566024,"line_start":321,"line_end":321,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6566029,"byte_end":6566034,"line_start":322,"line_end":322,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6566039,"byte_end":6566046,"line_start":323,"line_end":323,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6567390,"byte_end":6567401,"line_start":360,"line_end":360,"column_start":12,"column_end":23},"name":"repin_after","qualname":"<Guard>::repin_after","value":"pub fn repin_after<F, R>(&mut Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily unpins the thread, executes the given function and then re-pins the thread.","sig":null,"attributes":[{"value":"/ Temporarily unpins the thread, executes the given function and then re-pins the thread.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6566187,"byte_end":6566278,"line_start":330,"line_end":330,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6566283,"byte_end":6566286,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to perform a long-running operation (e.g. sleeping)","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6566291,"byte_end":6566382,"line_start":332,"line_end":332,"column_start":5,"column_end":96}},{"value":"/ and don't need to maintain any guard-based reference across the call (the latter is enforced","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6566387,"byte_end":6566483,"line_start":333,"line_end":333,"column_start":5,"column_end":101}},{"value":"/ by `&mut self`). The thread will only be unpinned if this is the only active guard for the","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6566488,"byte_end":6566582,"line_start":334,"line_end":334,"column_start":5,"column_end":99}},{"value":"/ current thread.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6566587,"byte_end":6566606,"line_start":335,"line_end":335,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6566611,"byte_end":6566614,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the passed function is called","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6566619,"byte_end":6566713,"line_start":337,"line_end":337,"column_start":5,"column_end":99}},{"value":"/ directly without unpinning the thread.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6566718,"byte_end":6566760,"line_start":338,"line_end":338,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6566765,"byte_end":6566768,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6566773,"byte_end":6566787,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6566792,"byte_end":6566795,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6566800,"byte_end":6566807,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6566812,"byte_end":6566861,"line_start":343,"line_end":343,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6566866,"byte_end":6566910,"line_start":344,"line_end":344,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6566915,"byte_end":6566935,"line_start":345,"line_end":345,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6566940,"byte_end":6566968,"line_start":346,"line_end":346,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6566973,"byte_end":6566976,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6566981,"byte_end":6567010,"line_start":348,"line_end":348,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6567015,"byte_end":6567048,"line_start":349,"line_end":349,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6567053,"byte_end":6567058,"line_start":350,"line_end":350,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6567063,"byte_end":6567102,"line_start":351,"line_end":351,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6567107,"byte_end":6567161,"line_start":352,"line_end":352,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6567166,"byte_end":6567171,"line_start":353,"line_end":353,"column_start":5,"column_end":10}},{"value":"/ guard.repin_after(|| thread::sleep(Duration::from_millis(50)));","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6567176,"byte_end":6567243,"line_start":354,"line_end":354,"column_start":5,"column_end":72}},{"value":"/ {","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6567248,"byte_end":6567253,"line_start":355,"line_end":355,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6567258,"byte_end":6567297,"line_start":356,"line_end":356,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6567302,"byte_end":6567356,"line_start":357,"line_end":357,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6567361,"byte_end":6567366,"line_start":358,"line_end":358,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6567371,"byte_end":6567378,"line_start":359,"line_end":359,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6568547,"byte_end":6568556,"line_start":398,"line_end":398,"column_start":12,"column_end":21},"name":"collector","qualname":"<Guard>::collector","value":"pub fn collector(&Self) -> Option<&Collector>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this guard.","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this guard.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6568006,"byte_end":6568061,"line_start":382,"line_end":382,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6568066,"byte_end":6568069,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to ensure that all guards used with","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6568074,"byte_end":6568149,"line_start":384,"line_end":384,"column_start":5,"column_end":80}},{"value":"/ a data structure come from the same collector.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6568154,"byte_end":6568204,"line_start":385,"line_end":385,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6568209,"byte_end":6568212,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then `None` is returned.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6568217,"byte_end":6568301,"line_start":387,"line_end":387,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6568306,"byte_end":6568309,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6568314,"byte_end":6568328,"line_start":389,"line_end":389,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6568333,"byte_end":6568336,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6568341,"byte_end":6568348,"line_start":391,"line_end":391,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6568353,"byte_end":6568386,"line_start":392,"line_end":392,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6568391,"byte_end":6568394,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6568399,"byte_end":6568429,"line_start":394,"line_end":394,"column_start":5,"column_end":35}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6568434,"byte_end":6568464,"line_start":395,"line_end":395,"column_start":5,"column_end":35}},{"value":"/ assert!(guard1.collector() == guard2.collector());","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6568469,"byte_end":6568523,"line_start":396,"line_end":396,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6568528,"byte_end":6568535,"line_start":397,"line_end":397,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":380},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6571855,"byte_end":6571866,"line_start":504,"line_end":504,"column_start":15,"column_end":26},"name":"unprotected","qualname":"::guard::unprotected","value":"pub unsafe fn unprotected() -> &'static Guard","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","sig":null,"attributes":[{"value":"/ Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6568966,"byte_end":6569053,"line_start":418,"line_end":418,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6569054,"byte_end":6569057,"line_start":419,"line_end":419,"column_start":1,"column_end":4}},{"value":"/ This guard should be used in special occasions only. Note that it doesn't actually keep any","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6569058,"byte_end":6569153,"line_start":420,"line_end":420,"column_start":1,"column_end":96}},{"value":"/ thread pinned - it's just a fake guard that allows loading from [`Atomic`]s unsafely.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6569154,"byte_end":6569243,"line_start":421,"line_end":421,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6569244,"byte_end":6569247,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ Note that calling [`defer`] with a dummy guard will not defer the function - it will just","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6569248,"byte_end":6569341,"line_start":423,"line_end":423,"column_start":1,"column_end":94}},{"value":"/ execute the function immediately.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6569342,"byte_end":6569379,"line_start":424,"line_end":424,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6569380,"byte_end":6569383,"line_start":425,"line_end":425,"column_start":1,"column_end":4}},{"value":"/ If necessary, it's possible to create more dummy guards by cloning: `unprotected().clone()`.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6569384,"byte_end":6569480,"line_start":426,"line_end":426,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6569481,"byte_end":6569484,"line_start":427,"line_end":427,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6569485,"byte_end":6569497,"line_start":428,"line_end":428,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6569498,"byte_end":6569501,"line_start":429,"line_end":429,"column_start":1,"column_end":4}},{"value":"/ Loading and dereferencing data from an [`Atomic`] using this guard is safe only if the","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6569502,"byte_end":6569592,"line_start":430,"line_end":430,"column_start":1,"column_end":91}},{"value":"/ [`Atomic`] is not being concurrently modified by other threads.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6569593,"byte_end":6569660,"line_start":431,"line_end":431,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6569661,"byte_end":6569664,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6569665,"byte_end":6569679,"line_start":433,"line_end":433,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6569680,"byte_end":6569683,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6569684,"byte_end":6569691,"line_start":435,"line_end":435,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6569692,"byte_end":6569741,"line_start":436,"line_end":436,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6569742,"byte_end":6569787,"line_start":437,"line_end":437,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6569788,"byte_end":6569791,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ let a = Atomic::new(7);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6569792,"byte_end":6569819,"line_start":439,"line_end":439,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6569820,"byte_end":6569823,"line_start":440,"line_end":440,"column_start":1,"column_end":4}},{"value":"/ unsafe {","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6569824,"byte_end":6569836,"line_start":441,"line_end":441,"column_start":1,"column_end":13}},{"value":"/     // Load `a` without pinning the current thread.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6569837,"byte_end":6569892,"line_start":442,"line_end":442,"column_start":1,"column_end":56}},{"value":"/     a.load(Relaxed, epoch::unprotected());","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6569893,"byte_end":6569939,"line_start":443,"line_end":443,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6569940,"byte_end":6569943,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/     // It's possible to create more dummy guards by calling `clone()`.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6569944,"byte_end":6570018,"line_start":445,"line_end":445,"column_start":1,"column_end":75}},{"value":"/     let dummy = &epoch::unprotected().clone();","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6570019,"byte_end":6570069,"line_start":446,"line_end":446,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6570070,"byte_end":6570073,"line_start":447,"line_end":447,"column_start":1,"column_end":4}},{"value":"/     dummy.defer(move || {","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6570074,"byte_end":6570103,"line_start":448,"line_end":448,"column_start":1,"column_end":30}},{"value":"/         println!(\"This gets executed immediately.\");","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6570104,"byte_end":6570160,"line_start":449,"line_end":449,"column_start":1,"column_end":57}},{"value":"/     });","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6570161,"byte_end":6570172,"line_start":450,"line_end":450,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6570173,"byte_end":6570176,"line_start":451,"line_end":451,"column_start":1,"column_end":4}},{"value":"/     // Dropping `dummy` doesn't affect the current thread - it's just a noop.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6570177,"byte_end":6570258,"line_start":452,"line_end":452,"column_start":1,"column_end":82}},{"value":"/ }","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6570259,"byte_end":6570264,"line_start":453,"line_end":453,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6570265,"byte_end":6570272,"line_start":454,"line_end":454,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6570273,"byte_end":6570276,"line_start":455,"line_end":455,"column_start":1,"column_end":4}},{"value":"/ The most common use of this function is when constructing or destructing a data structure.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6570277,"byte_end":6570371,"line_start":456,"line_end":456,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6570372,"byte_end":6570375,"line_start":457,"line_end":457,"column_start":1,"column_end":4}},{"value":"/ For example, we can use a dummy guard in the destructor of a Treiber stack because at that","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6570376,"byte_end":6570470,"line_start":458,"line_end":458,"column_start":1,"column_end":95}},{"value":"/ point no other thread could concurrently modify the [`Atomic`]s we are accessing.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6570471,"byte_end":6570556,"line_start":459,"line_end":459,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6570557,"byte_end":6570560,"line_start":460,"line_end":460,"column_start":1,"column_end":4}},{"value":"/ If we were to actually pin the current thread during destruction, that would just unnecessarily","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6570561,"byte_end":6570660,"line_start":461,"line_end":461,"column_start":1,"column_end":100}},{"value":"/ delay garbage collection and incur some performance cost, so in cases like these `unprotected`","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6570661,"byte_end":6570759,"line_start":462,"line_end":462,"column_start":1,"column_end":99}},{"value":"/ is very helpful.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6570760,"byte_end":6570780,"line_start":463,"line_end":463,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6570781,"byte_end":6570784,"line_start":464,"line_end":464,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6570785,"byte_end":6570792,"line_start":465,"line_end":465,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6570793,"byte_end":6570842,"line_start":466,"line_end":466,"column_start":1,"column_end":50}},{"value":"/ use std::mem::ManuallyDrop;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6570843,"byte_end":6570874,"line_start":467,"line_end":467,"column_start":1,"column_end":32}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6570875,"byte_end":6570920,"line_start":468,"line_end":468,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6570921,"byte_end":6570924,"line_start":469,"line_end":469,"column_start":1,"column_end":4}},{"value":"/ struct Stack<T> {","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6570925,"byte_end":6570946,"line_start":470,"line_end":470,"column_start":1,"column_end":22}},{"value":"/     head: Atomic<Node<T>>,","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6570947,"byte_end":6570977,"line_start":471,"line_end":471,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6570978,"byte_end":6570983,"line_start":472,"line_end":472,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6570984,"byte_end":6570987,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ struct Node<T> {","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6570988,"byte_end":6571008,"line_start":474,"line_end":474,"column_start":1,"column_end":21}},{"value":"/     data: ManuallyDrop<T>,","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6571009,"byte_end":6571039,"line_start":475,"line_end":475,"column_start":1,"column_end":31}},{"value":"/     next: Atomic<Node<T>>,","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6571040,"byte_end":6571070,"line_start":476,"line_end":476,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6571071,"byte_end":6571076,"line_start":477,"line_end":477,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6571077,"byte_end":6571080,"line_start":478,"line_end":478,"column_start":1,"column_end":4}},{"value":"/ impl<T> Drop for Stack<T> {","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6571081,"byte_end":6571112,"line_start":479,"line_end":479,"column_start":1,"column_end":32}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6571113,"byte_end":6571141,"line_start":480,"line_end":480,"column_start":1,"column_end":29}},{"value":"/         unsafe {","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6571142,"byte_end":6571162,"line_start":481,"line_end":481,"column_start":1,"column_end":21}},{"value":"/             // Unprotected load.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6571163,"byte_end":6571199,"line_start":482,"line_end":482,"column_start":1,"column_end":37}},{"value":"/             let mut node = self.head.load(Relaxed, epoch::unprotected());","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6571200,"byte_end":6571277,"line_start":483,"line_end":483,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6571278,"byte_end":6571281,"line_start":484,"line_end":484,"column_start":1,"column_end":4}},{"value":"/             while let Some(n) = node.as_ref() {","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6571282,"byte_end":6571333,"line_start":485,"line_end":485,"column_start":1,"column_end":52}},{"value":"/                 // Unprotected load.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6571334,"byte_end":6571374,"line_start":486,"line_end":486,"column_start":1,"column_end":41}},{"value":"/                 let next = n.next.load(Relaxed, epoch::unprotected());","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6571375,"byte_end":6571449,"line_start":487,"line_end":487,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6571450,"byte_end":6571453,"line_start":488,"line_end":488,"column_start":1,"column_end":4}},{"value":"/                 // Take ownership of the node, then drop its data and deallocate it.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6571454,"byte_end":6571542,"line_start":489,"line_end":489,"column_start":1,"column_end":89}},{"value":"/                 let mut o = node.into_owned();","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6571543,"byte_end":6571593,"line_start":490,"line_end":490,"column_start":1,"column_end":51}},{"value":"/                 ManuallyDrop::drop(&mut o.data);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6571594,"byte_end":6571646,"line_start":491,"line_end":491,"column_start":1,"column_end":53}},{"value":"/                 drop(o);","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6571647,"byte_end":6571675,"line_start":492,"line_end":492,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6571676,"byte_end":6571679,"line_start":493,"line_end":493,"column_start":1,"column_end":4}},{"value":"/                 node = next;","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6571680,"byte_end":6571712,"line_start":494,"line_end":494,"column_start":1,"column_end":33}},{"value":"/             }","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6571713,"byte_end":6571730,"line_start":495,"line_end":495,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6571731,"byte_end":6571744,"line_start":496,"line_end":496,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6571745,"byte_end":6571754,"line_start":497,"line_end":497,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6571755,"byte_end":6571760,"line_start":498,"line_end":498,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6571761,"byte_end":6571768,"line_start":499,"line_end":499,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6571769,"byte_end":6571772,"line_start":500,"line_end":500,"column_start":1,"column_end":4}},{"value":"/ [`Atomic`]: super::Atomic","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6571773,"byte_end":6571802,"line_start":501,"line_end":501,"column_start":1,"column_end":30}},{"value":"/ [`defer`]: Guard::defer","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6571803,"byte_end":6571830,"line_start":502,"line_end":502,"column_start":1,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6571831,"byte_end":6571840,"line_start":503,"line_end":503,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":638},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/default.rs","byte_start":7559219,"byte_end":7559222,"line_start":23,"line_end":23,"column_start":8,"column_end":11},"name":"pin","qualname":"::default::pin","value":"pub fn pin() -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the current thread.\n","sig":null,"attributes":[{"value":"/ Pins the current thread.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/default.rs","byte_start":7559173,"byte_end":7559201,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"inline","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/default.rs","byte_start":7559202,"byte_end":7559211,"line_start":22,"line_end":22,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":640},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/default.rs","byte_start":7559347,"byte_end":7559356,"line_start":29,"line_end":29,"column_start":8,"column_end":17},"name":"is_pinned","qualname":"::default::is_pinned","value":"pub fn is_pinned() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the current thread is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the current thread is pinned.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/default.rs","byte_start":7559278,"byte_end":7559329,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/default.rs","byte_start":7559330,"byte_end":7559339,"line_start":28,"line_end":28,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":642},"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/default.rs","byte_start":7559466,"byte_end":7559483,"line_start":34,"line_end":34,"column_start":8,"column_end":25},"name":"default_collector","qualname":"::default::default_collector","value":"pub fn default_collector() -> &'static Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the default global collector.\n","sig":null,"attributes":[{"value":"/ Returns the default global collector.","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/default.rs","byte_start":7559417,"byte_end":7559458,"line_start":33,"line_end":33,"column_start":1,"column_end":42}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6493648,"byte_end":6493666,"line_start":37,"line_end":37,"column_start":60,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6494844,"byte_end":6494852,"line_start":68,"line_end":68,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6498605,"byte_end":6498606,"line_start":182,"line_end":182,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":73},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6501691,"byte_end":6501697,"line_start":280,"line_end":280,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6501762,"byte_end":6501768,"line_start":281,"line_end":281,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6501784,"byte_end":6501790,"line_start":283,"line_end":283,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6502123,"byte_end":6502129,"line_start":298,"line_end":298,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":668},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":121},{"krate":0,"index":127},{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6514243,"byte_end":6514249,"line_start":645,"line_end":645,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6514596,"byte_end":6514602,"line_start":657,"line_end":657,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6514890,"byte_end":6514896,"line_start":665,"line_end":665,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6515243,"byte_end":6515249,"line_start":676,"line_end":676,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6515361,"byte_end":6515367,"line_start":682,"line_end":682,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6515762,"byte_end":6515768,"line_start":699,"line_end":699,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6515871,"byte_end":6515877,"line_start":705,"line_end":705,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6515997,"byte_end":6516003,"line_start":711,"line_end":711,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6516352,"byte_end":6516358,"line_start":726,"line_end":726,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6517571,"byte_end":6517576,"line_start":767,"line_end":767,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6518083,"byte_end":6518088,"line_start":790,"line_end":790,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6519738,"byte_end":6519743,"line_start":850,"line_end":850,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6521413,"byte_end":6521418,"line_start":913,"line_end":913,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6521608,"byte_end":6521613,"line_start":922,"line_end":922,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6521891,"byte_end":6521896,"line_start":933,"line_end":933,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6522037,"byte_end":6522042,"line_start":939,"line_end":939,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6522235,"byte_end":6522240,"line_start":948,"line_end":948,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6522406,"byte_end":6522411,"line_start":955,"line_end":955,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6522501,"byte_end":6522506,"line_start":961,"line_end":961,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6522979,"byte_end":6522984,"line_start":980,"line_end":980,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6523094,"byte_end":6523099,"line_start":986,"line_end":986,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6523221,"byte_end":6523226,"line_start":992,"line_end":992,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6523332,"byte_end":6523337,"line_start":998,"line_end":998,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6523838,"byte_end":6523844,"line_start":1015,"line_end":1015,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6524018,"byte_end":6524024,"line_start":1024,"line_end":1024,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6524079,"byte_end":6524085,"line_start":1026,"line_end":1026,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6524331,"byte_end":6524337,"line_start":1041,"line_end":1041,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6525017,"byte_end":6525023,"line_start":1065,"line_end":1065,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6532315,"byte_end":6532321,"line_start":1296,"line_end":1296,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6532884,"byte_end":6532890,"line_start":1318,"line_end":1318,"column_start":62,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6533017,"byte_end":6533023,"line_start":1324,"line_end":1324,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6533097,"byte_end":6533103,"line_start":1326,"line_end":1326,"column_start":63,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6533268,"byte_end":6533274,"line_start":1332,"line_end":1332,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6533422,"byte_end":6533428,"line_start":1338,"line_end":1338,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6533731,"byte_end":6533737,"line_start":1349,"line_end":1349,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6533928,"byte_end":6533934,"line_start":1355,"line_end":1355,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":6534753,"byte_end":6534762,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":6534787,"byte_end":6534796,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":6534818,"byte_end":6534827,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":6534941,"byte_end":6534950,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":6535192,"byte_end":6535201,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":6535399,"byte_end":6535408,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":6535536,"byte_end":6535545,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":6535719,"byte_end":6535728,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":6535839,"byte_end":6535850,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":6536310,"byte_end":6536321,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":6536468,"byte_end":6536479,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/deferred.rs","byte_start":6546417,"byte_end":6546425,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/deferred.rs","byte_start":6546549,"byte_end":6546557,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/epoch.rs","byte_start":6550404,"byte_end":6550409,"line_start":22,"line_end":22,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/epoch.rs","byte_start":6552164,"byte_end":6552175,"line_start":81,"line_end":81,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6555158,"byte_end":6555163,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":362},{"krate":0,"index":366},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6568681,"byte_end":6568686,"line_start":403,"line_end":403,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6568856,"byte_end":6568861,"line_start":412,"line_end":412,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/internal.rs","byte_start":6575443,"byte_end":6575446,"line_start":70,"line_end":70,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/internal.rs","byte_start":6575456,"byte_end":6575459,"line_start":72,"line_end":72,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/internal.rs","byte_start":6576386,"byte_end":6576389,"line_start":107,"line_end":107,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/internal.rs","byte_start":6579667,"byte_end":6579670,"line_start":192,"line_end":192,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/internal.rs","byte_start":6580069,"byte_end":6580072,"line_start":204,"line_end":204,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/internal.rs","byte_start":6580498,"byte_end":6580507,"line_start":222,"line_end":222,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/internal.rs","byte_start":6580517,"byte_end":6580526,"line_start":224,"line_end":224,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/internal.rs","byte_start":6581201,"byte_end":6581207,"line_start":245,"line_end":245,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/internal.rs","byte_start":6586141,"byte_end":6586146,"line_start":382,"line_end":382,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/internal.rs","byte_start":6594666,"byte_end":6594671,"line_start":602,"line_end":602,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/sync/list.rs","byte_start":6600659,"byte_end":6600664,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/sync/list.rs","byte_start":6600800,"byte_end":6600805,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/sync/list.rs","byte_start":6601311,"byte_end":6601315,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/sync/list.rs","byte_start":6603867,"byte_end":6603871,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/sync/list.rs","byte_start":6604403,"byte_end":6604407,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":519},{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/sync/queue.rs","byte_start":6614181,"byte_end":6614186,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/sync/queue.rs","byte_start":6614223,"byte_end":6614228,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/sync/queue.rs","byte_start":6614244,"byte_end":6614249,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":550},{"krate":0,"index":554},{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/sync/queue.rs","byte_start":6619863,"byte_end":6619868,"line_start":196,"line_end":196,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6493648,"byte_end":6493666,"line_start":37,"line_end":37,"column_start":60,"column_end":78},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":29},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6494844,"byte_end":6494852,"line_start":68,"line_end":68,"column_start":32,"column_end":40},"kind":{"Impl":{"id":1}},"from":{"krate":2,"index":30197},"to":{"krate":0,"index":40}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6498605,"byte_end":6498606,"line_start":182,"line_end":182,"column_start":23,"column_end":24},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":67},"to":{"krate":0,"index":57}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6501691,"byte_end":6501697,"line_start":280,"line_end":280,"column_start":59,"column_end":65},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":1927}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6501762,"byte_end":6501768,"line_start":281,"line_end":281,"column_start":59,"column_end":65},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":1939}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6501784,"byte_end":6501790,"line_start":283,"line_end":283,"column_start":9,"column_end":15},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":91},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6502123,"byte_end":6502129,"line_start":298,"line_end":298,"column_start":29,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":91},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6514243,"byte_end":6514249,"line_start":645,"line_end":645,"column_start":44,"column_end":50},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6514596,"byte_end":6514602,"line_start":657,"line_end":657,"column_start":46,"column_end":52},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":6218}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6514890,"byte_end":6514896,"line_start":665,"line_end":665,"column_start":39,"column_end":45},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":1625}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6515243,"byte_end":6515249,"line_start":676,"line_end":676,"column_start":41,"column_end":47},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6515361,"byte_end":6515367,"line_start":682,"line_end":682,"column_start":48,"column_end":54},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6515762,"byte_end":6515768,"line_start":699,"line_end":699,"column_start":26,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6515871,"byte_end":6515877,"line_start":705,"line_end":705,"column_start":21,"column_end":27},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6515997,"byte_end":6516003,"line_start":711,"line_end":711,"column_start":57,"column_end":63},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6516352,"byte_end":6516358,"line_start":726,"line_end":726,"column_start":28,"column_end":34},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6517571,"byte_end":6517576,"line_start":767,"line_end":767,"column_start":44,"column_end":49},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":166},"to":{"krate":0,"index":162}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6518083,"byte_end":6518088,"line_start":790,"line_end":790,"column_start":9,"column_end":14},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":166},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6519738,"byte_end":6519743,"line_start":850,"line_end":850,"column_start":29,"column_end":34},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":166},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6521413,"byte_end":6521418,"line_start":913,"line_end":913,"column_start":38,"column_end":43},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6521608,"byte_end":6521613,"line_start":922,"line_end":922,"column_start":44,"column_end":49},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6521891,"byte_end":6521896,"line_start":933,"line_end":933,"column_start":26,"column_end":31},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":1625}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6522037,"byte_end":6522042,"line_start":939,"line_end":939,"column_start":39,"column_end":44},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6522235,"byte_end":6522240,"line_start":948,"line_end":948,"column_start":42,"column_end":47},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":2111}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6522406,"byte_end":6522411,"line_start":955,"line_end":955,"column_start":21,"column_end":26},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6522501,"byte_end":6522506,"line_start":961,"line_end":961,"column_start":26,"column_end":31},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6522979,"byte_end":6522984,"line_start":980,"line_end":980,"column_start":43,"column_end":48},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":1603}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6523094,"byte_end":6523099,"line_start":986,"line_end":986,"column_start":46,"column_end":51},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":1606}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6523221,"byte_end":6523226,"line_start":992,"line_end":992,"column_start":42,"column_end":47},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":1836}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6523332,"byte_end":6523337,"line_start":998,"line_end":998,"column_start":42,"column_end":47},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":166},"to":{"krate":2,"index":1839}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6523838,"byte_end":6523844,"line_start":1015,"line_end":1015,"column_start":39,"column_end":45},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":1625}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6524018,"byte_end":6524024,"line_start":1024,"line_end":1024,"column_start":38,"column_end":44},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":1937}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6524079,"byte_end":6524085,"line_start":1026,"line_end":1026,"column_start":44,"column_end":50},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":220},"to":{"krate":0,"index":162}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6524331,"byte_end":6524337,"line_start":1041,"line_end":1041,"column_start":13,"column_end":19},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6525017,"byte_end":6525023,"line_start":1065,"line_end":1065,"column_start":33,"column_end":39},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6532315,"byte_end":6532321,"line_start":1296,"line_end":1296,"column_start":28,"column_end":34},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":1845}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6532884,"byte_end":6532890,"line_start":1318,"line_end":1318,"column_start":62,"column_end":68},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":1653}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6533017,"byte_end":6533023,"line_start":1324,"line_end":1324,"column_start":36,"column_end":42},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":1658}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6533097,"byte_end":6533103,"line_start":1326,"line_end":1326,"column_start":63,"column_end":69},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":1690}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6533268,"byte_end":6533274,"line_start":1332,"line_end":1332,"column_start":37,"column_end":43},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":1679}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6533422,"byte_end":6533428,"line_start":1338,"line_end":1338,"column_start":44,"column_end":50},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6533731,"byte_end":6533737,"line_start":1349,"line_end":1349,"column_start":46,"column_end":52},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":6218}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/atomic.rs","byte_start":6533928,"byte_end":6533934,"line_start":1355,"line_end":1355,"column_start":41,"column_end":47},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":6534753,"byte_end":6534762,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":1927}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":6534787,"byte_end":6534796,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":1939}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":6534818,"byte_end":6534827,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":6534941,"byte_end":6534950,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":281},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":6535192,"byte_end":6535201,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":1625}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":6535399,"byte_end":6535408,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":6535536,"byte_end":6535545,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":1653}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":6535719,"byte_end":6535728,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":281},"to":{"krate":2,"index":1658}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":6535839,"byte_end":6535850,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":297},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":6536310,"byte_end":6536321,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":297},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/collector.rs","byte_start":6536468,"byte_end":6536479,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":297},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/deferred.rs","byte_start":6546417,"byte_end":6546425,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":318},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/deferred.rs","byte_start":6546549,"byte_end":6546557,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":318},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/epoch.rs","byte_start":6550404,"byte_end":6550409,"line_start":22,"line_end":22,"column_start":6,"column_end":11},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":574},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/epoch.rs","byte_start":6552164,"byte_end":6552175,"line_start":81,"line_end":81,"column_start":6,"column_end":17},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":590},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6555158,"byte_end":6555163,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6568681,"byte_end":6568686,"line_start":403,"line_end":403,"column_start":15,"column_end":20},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":356},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/guard.rs","byte_start":6568856,"byte_end":6568861,"line_start":412,"line_end":412,"column_start":21,"column_end":26},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":356},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/internal.rs","byte_start":6575443,"byte_end":6575446,"line_start":70,"line_end":70,"column_start":22,"column_end":25},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":417},"to":{"krate":2,"index":1927}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/internal.rs","byte_start":6575456,"byte_end":6575459,"line_start":72,"line_end":72,"column_start":6,"column_end":9},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":417},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/internal.rs","byte_start":6576386,"byte_end":6576389,"line_start":107,"line_end":107,"column_start":18,"column_end":21},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":417},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/internal.rs","byte_start":6579667,"byte_end":6579670,"line_start":192,"line_end":192,"column_start":15,"column_end":18},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":417},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/internal.rs","byte_start":6580069,"byte_end":6580072,"line_start":204,"line_end":204,"column_start":21,"column_end":24},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":417},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/internal.rs","byte_start":6580498,"byte_end":6580507,"line_start":222,"line_end":222,"column_start":22,"column_end":31},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":597},"to":{"krate":2,"index":1939}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/internal.rs","byte_start":6580517,"byte_end":6580526,"line_start":224,"line_end":224,"column_start":6,"column_end":15},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":597},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/internal.rs","byte_start":6581201,"byte_end":6581207,"line_start":245,"line_end":245,"column_start":6,"column_end":12},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/internal.rs","byte_start":6586141,"byte_end":6586146,"line_start":382,"line_end":382,"column_start":6,"column_end":11},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":447},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/internal.rs","byte_start":6594666,"byte_end":6594671,"line_start":602,"line_end":602,"column_start":27,"column_end":32},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":447},"to":{"krate":0,"index":485}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/sync/list.rs","byte_start":6600659,"byte_end":6600664,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":604},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/sync/list.rs","byte_start":6600800,"byte_end":6600805,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":604},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/sync/list.rs","byte_start":6601311,"byte_end":6601315,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":608},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/sync/list.rs","byte_start":6603867,"byte_end":6603871,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":608},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/sync/list.rs","byte_start":6604403,"byte_end":6604407,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":490},"to":{"krate":2,"index":4989}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/sync/queue.rs","byte_start":6614181,"byte_end":6614186,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":625},"to":{"krate":2,"index":1939}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/sync/queue.rs","byte_start":6614223,"byte_end":6614228,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":625},"to":{"krate":2,"index":1927}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/sync/queue.rs","byte_start":6614244,"byte_end":6614249,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/isaacmarovitz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.0/src/sync/queue.rs","byte_start":6619863,"byte_end":6619868,"line_start":196,"line_end":196,"column_start":18,"column_end":23},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":625},"to":{"krate":2,"index":2122}}]}